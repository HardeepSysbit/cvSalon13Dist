{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cv-salon/cv-salon-composer/cv-salon-composer.component.ts","webpack:///src/app/cv-salon/cv-salon-composer/cv-salon-composer.component.html","webpack:///src/app/cv-salon/cv-salon-viewer/cv-salon-viewer.component.ts","webpack:///src/app/cv-salon/cv-salon-viewer/cv-salon-viewer.component.html","webpack:///src/app/cv-salon/cv-salon.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/lib/ctrlSvc.ts","webpack:///src/app/lib/dialog/dialog.component.ts","webpack:///src/app/lib/dialog/dialog.component.html","webpack:///src/app/lib/dialog/dialog.module.ts","webpack:///src/app/lib/dialog/dialog.service.ts","webpack:///src/app/lib/dialog/index.ts","webpack:///src/app/lib/global.ts","webpack:///src/app/lib/headerInjector.ts","webpack:///src/app/lib/programfilter.pipe.ts","webpack:///src/app/lib/restSvc.ts","webpack:///src/app/lms-menu/lms-menu.component.ts","webpack:///src/app/lms-menu/lms-menu.component.html","webpack:///src/app/lms-window/lms-window.component.ts","webpack:///src/app/lms-window/lms-window.component.html","webpack:///src/app/lms/lms.component.ts","webpack:///src/app/lms/lms.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/optimus-minds/optimus-minds-admin.component.ts","webpack:///src/app/optimus-minds/optimus-minds-admin.component.html","webpack:///src/app/optimus-minds/optimus-minds.ts","webpack:///src/app/study-card/study-card.component.ts","webpack:///src/app/study-card/study-card.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","dlgSvc","restSvc","ctrlSvc","title","tableName","pin","email","close","onSave","alert","adminLevelReq","_id","getById","data","aryKeys","Object","value","i","length","svrData","locData","getPhoto","getTrainerPhoto","clientName","declareChk","shareChk","EMAIL_REGEXP","test","emailToken","msg","adminLevel","token","dlgAuthMode","err","JSON","stringify","onBtnAction","objData","key","makeProgramList","create","rcvd","docs","upLoadDocs","update","docType","docTable","docId","file","formData","FormData","append","inProgress","upLoadDoc","pipe","event","type","UploadProgress","progress","Math","round","loaded","total","Response","error","message","name","subscribe","errList","logo","domainName","onErrClose","cancelSubmit","okSubmit","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","$event","target","CvSalonComposerComponent","_Activatedroute","aboutMe","mobileNbr","dob","address","edus","cboEdus","edu","eduNote","eduTitle","eduSelected","showEduTitle","skills","cboSkills","cboSkillRates","skillRate","skill","skillNote","skillTitle","skillSelected","showSkillTitle","certs","cboCerts","cert","certNote","certTitle","certSelected","showCertTitle","acheives","cboAcheives","acheive","acheiveNote","acheiveTitle","acheiveSelected","attachAcheive","showAcheiveTitle","exps","cboExps","exp","expNote","expTitle","expSelected","moeExpiry","moeFile","program","aiChk","atRiskChk","careerChk","dramaChk","danceChk","itChk","skillsChk","tongueChk","musicChk","outdoorChk","sportsChk","visualChk","attachCert","newCert","newEdu","newSkill","newExp","newAcheive","showExpTitle","snapshot","url","toString","toLowerCase","init","paramMap","get","openModal","open","idx","mPrograms","push","replace","fidx","findIndex","x","strNote","note","splice","rate","saveCertCvSalon","saveCertOptimusMinds","evt","imagePath","imgURL","doc","files","mimeType","match","makeImgFromBlob","onCancelProfile","onSaveProfile","onCancelAboutMe","onSaveAboutMe","onExitEdu","onSaveEdu","onExitExp","onSaveExp","onSelSkillRate","onExitSkill","onSaveSkill","onExitAcheive","onSaveAcheive","onExitCert","onSaveCert","onSelProgram","onAttach","onCancelMoe","onSaveMoe","CvSalonViewerComponent","resp","isImageLoading","client","paraProgram","item","photo","CvSalon","template","HeaderComponent","onSubmit","onQry","onPdf","CtrlSvc","httpClient","docName","qryTrainer","obj","trainersExist","trainers","document","getElementById","canvas","imgWidth","pageHeight","imgHeight","height","width","heightLeft","contentDataURL","toDataURL","pdf","position","addImage","save","zip","Blob","output","createZip","httpOptions","responseType","apiEp","SERVER_URL","toPromise","res","zipName","pdfBlob","onPdfBlob","counter","getFile","fileData","b","generateAsync","content","providedIn","DialogComponent","dialogService","el","element","nativeElement","console","body","appendChild","addEventListener","className","add","remove","style","display","classList","encapsulation","None","DialogModule","DialogService","dialogs","dialog","filter","find","Global","photo1","photo2","photoList","showTopBar","num","size","s","array","max","apply","map","o","nbr","pad","othersChk","achievementsAny","storyDone","mnu","lmsCards","msgs","lmsUserStories","studyCards","lmsMenuName","trainExpAiExpCnt","trainExpAtRiskCnt","trainExpCarrerCnt","trainExpDanceExpCnt","trainExpDramaExpCnt","trainExpItExpCnt","trainExpMusicExpCnt","trainExpTongueExpCnt","trainExpsSkillsExpCnt","trainExpsOutdoorExpCnt","trainExpsVisualExpCnt","trainExpsSportsExpCnt","trainExpsOthersExpCnt","aiExpAny","atRiskExpAny","careerExpAny","dramaExpAny","danceExpAny","itExpAny","skillsExpAny","tongueExpAny","musicExpAny","outdoorExpAny","sportsExpAny","visualExpAny","othersExpAny","from","year","trainCertPickId","trainCertId","dataMode","trainer","trainerName","trainerCode","idNbr","programs","trainCerts","achievements","trainExpAny","trainExpsExpAny","HeaderInjector","request","next","clone","headers","set","handle","ProgramfilterPipe","indexOf","RestSvc","btnAction","watchBtnAction","asObservable","action","folder","promise","reject","blob","makeTrainerImg","image","reader","FileReader","trainerPhoto","result","readAsDataURL","makeImg","uri","post","reportProgress","observe","fileName","qryTrainerApi","apiURL","put","listApi","LmsMenuComponent","list","entries","ix","forEach","getClassPhoto","listUserStories","listMsg","onWelcome","onAboutMe","onMyClassMates","onVideo","onAssign1A","onAssign1B","onFinal","LmsWindowComponent","benefit","role","reason","points","storyOwnerId","storyNbr","img","_nbr","_role","_function","_benefit","addPoint","selectedFile","upLoadPhoto","currentStep","onSaveInfo","onSaveStage","onCancelInfo","onCancelStory","onSaveStory","onCancelPoints","onSavePoints","LmsComponent","NavComponent","onZipPack","OptimusMindsAdminComponent","trainerPickId","trainExpPickIndex","docFile","docFolder","trainerId","j","OptimusMinds","StudyCardComponent","studyCard","xanswer","header","question","answer","floor","random","onShowAnswer","onNextCard","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HeaderComponent } from './header/header.component';\nimport { NavComponent } from './nav/nav.component';\n\nimport { OptimusMinds } from './optimus-minds/optimus-minds';\nimport { OptimusMindsAdminComponent } from './optimus-minds/optimus-minds-admin.component';\n\n/* import { MainComponent } from './main/main.component'; */\nimport { AboutComponent } from './about/about.component';\n/* import { OptimusMindsComponent } from './optimus-mindsOld/optimus-minds.component';\nimport { OptimusMindsAdminComponent } from './optimus-minds-admin/optimus-minds-admin.component';\n */\nimport { CvSalon } from './cv-salon/cv-salon';\n\nimport { LmsComponent } from './lms/lms.component';\nimport { LmsMenuComponent } from './lms-menu/lms-menu.component';\nimport { LmsWindowComponent } from './lms-window/lms-window.component';\n\nimport { StudyCardComponent } from './study-card/study-card.component';\n\n/* import { CvSalonComposerComponent } from './cv-salon/cv-salon-composer/cv-salon-composer.component';\nimport { CvSalonViewerComponent } from './cv-salon/cv-salon-viewer/cv-salon-viewer.component';\nimport { OptimusMindsSiteComponent } from './optimus-minds/optimus-minds-site/optimus-minds-site.component';\nimport { OptimusMindsComposerComponent } from './optimus-minds/optimus-minds-composer/optimus-minds-composer.component';\nimport { OptimusMindsViewerComponent } from './optimus-minds/optimus-minds-viewer/optimus-minds-viewer.component';\n\n */\n\n\nconst routes: Routes = [\n  { path:  '', component:  CvSalon , pathMatch:  'full' },\n  { path:  'optimusminds', component:  CvSalon , pathMatch:  'full' },\n  { path:  'optimusminds/:email', component:  CvSalon , pathMatch:  'full' },\n  { path:  'admin/optimusminds', component:  OptimusMinds  , pathMatch:  'full' },\n  { path:  'lms', component:   LmsComponent  , pathMatch:  'full' },\n  { path:  'lms/:email', component: LmsComponent , pathMatch:  'full' },\n  {  path:  'studyCard', component: StudyCardComponent , pathMatch:  'full'}\n  \n /*  { path: 'cvsalon', component: CvSalonSiteComponent },\n  { path: 'cvsalon/:email', component: CvSalonSiteComponent },\n  { path: 'optimusminds', component:  OptimusMindsComponent , pathMatch:  'full' },\n  { path: 'optimusminds/admin', component:  OptimusMindsAdminComponent , pathMatch:  'full' },\n  { path: 'optimusminds/:email', component:  OptimusMindsComponent , pathMatch:  'full' },\n  { path: 'optimusminds/admin/:email', component:  OptimusMindsAdminComponent , pathMatch:  'full' },\n  { path: ':_id', component:  MainComponent, pathMatch:  'full' } ,\n   { path:'about', component: AboutComponent } */  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Global } from './lib/global';\n\n/* import { ModalService } from './lib/_modal';  */\nimport { DialogService } from './lib/dialog';\nimport { RestSvc } from './lib/restSvc';\nimport { FormBuilder, FormGroup, CheckboxRequiredValidator } from '@angular/forms';\nimport { HttpEventType, HttpErrorResponse } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport * as jspdf from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport { stringify } from 'querystring';\n\nimport { CtrlSvc } from './lib/ctrlSvc';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'cvSalon ver 1.0';\n  tableName = \"applicants\";\n  pin = \"\" ;\n\n   \n \n\n\n\n  constructor(private dlgSvc: DialogService, private restSvc: RestSvc, private ctrlSvc: CtrlSvc) { }\n\n  ngOnInit(): void {\n    Global.email = \"\"\n\n  }\n\n\n  get clientName() {\n    return Global.clientName;\n  }\n\n  get docs() {\n\n    return Global.docs;\n  }\n\n  get errList() {\n    return Global.errList;\n  }\n\n  get declareChk() {\n    return Global.locData[\"declareChk\"];\n  }\n\n\n  get shareChk() {\n    return Global.locData[\"shareChk\"];\n  }\n\n  set declareChk(value) {\n    Global.locData[\"declareChk\"] = value;\n  }\n\n\n  set shareChk(value) {\n    Global.locData[\"shareChk\"] = value;\n  }\n\n\n  get dlgAuthMode() {\n    return Global.dlgAuthMode;\n  }\n\n  get email() {\n    return Global.email;\n  }\n\n  set email(value) {\n    Global.email = value;\n  }\n\n  cancelSubmit() {\n    this.dlgSvc.close('dlgSubmit');\n  }\n\n  okSubmit() {\n    this.onSave();\n\n    this.dlgSvc.close('dlgSubmit');\n  }\n\n  onErrClose() {\n    this.dlgSvc.close('dlgErr');\n  }\n\n//  get  pin() {\n//     return Global.pin ;\n//   }\n\n//   set  pin(value) {\n//      Global.pin = value ;\n//   }\n\n  onAuthPin() {\n\n\n   \n\n     if (this.pin != Global.pin) {\n      alert('Wrong Pin Supplied') ;\n      return ;\n    } \n\n    this.dlgSvc.close('dlgAuth');\n \n\n\n    if (Global.adminLevelReq === 0) {\n\n    \n\n      if (Global._id != \"\") {\n\n\n\n        this.restSvc.getById(Global._id).then(\n\n          (data) => {\n\n\n            let aryKeys = Object.keys(data);\n            let value = \"\";\n            for (let i = 0; i < aryKeys.length; i++) {\n              value = data[aryKeys[i]];\n              Global.svrData[aryKeys[i]] = value;\n              Global.locData[aryKeys[i]] = value;\n            }\n\n         \n          })\n\n\n        this.restSvc.getPhoto(Global._id);\n\n        this.restSvc.getTrainerPhoto('5fbcc60d9f5abc63056791b9') ;\n\n\n\n\n\n\n      }\n      else {\n\n        this.restSvc.getTrainerPhoto('5fbcc60d9f5abc63056791b9') ;\n      }\n    }\n    else {\n      \n     \n\n\n    }\n\n  }\n\n\n  disableSubmit() {\n\n    if (Global.clientName == \"optimusMinds\") {\n      return this.declareChk && this.shareChk ? false : true;\n    }\n    else {\n      return false;\n    }\n\n  }\n\n  disableAuthEmail() {\n    \n    \n    var EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n\n    if ( this.email == \"\" ) {\n      return true;\n    }\n    else if (this.email.length <= 5 || !EMAIL_REGEXP.test(this.email)) {\n        return  true ;\n    }\n    else {\n      return false ;\n    }\n\n\n \n\n  }\n\n  disableAuthPin() {\n    return this.pin == Global.pin ? false : true;\n  }\n\n  onAuthEmail() {\n\n   \n\n    this.restSvc.emailToken(Global.email).then(\n      (msg) => {\n\n      \n        let adminLevel = msg['adminLevel'];\n\n        if (adminLevel < Global.adminLevelReq) {\n          alert(`User with email: ${this.email} does not have the required Administrator Access Level`)\n          return;\n        }\n\n        //    alert(JSON.stringify(msg)) ;\n        //   Global.email = email ;\n        Global.token = msg['token'];\n        Global.pin = msg['pin'];\n        Global._id = msg['_id'];\n\n        \n          \n\n        Global.dlgAuthMode = 2;\n\n        // Temporary \n       // this.pin = Global.pin;\n\n        \n\n\n\n        //Global.dlgAuthMode = 2 ;\n\n        // this.openModal('dlgAuth');\n\n      },\n      (err) => {\n\n\n\n        alert(JSON.stringify(err));\n\n      })\n\n\n\n\n  }\n\n  onQry() {\n\n    this.restSvc.onBtnAction('qry');\n\n    // Global.makeProgramList() ;\n\n    // alert(JSON.stringify(Global.locData[\"programs\"] )) ;\n    /* \n      this.restSvc.qryTrainer(Global.locData[\"programs\"]).then(\n        (rcvd) =>  {\n    \n         \n    \n            let obj = {} ;\n          \n            obj[\"list\"] = rcvd ;\n            \n            Global.trainers = obj[\"list\"]  ;\n    \n            \n    \n        } ,   \n        (err) =>  {\n         \n        }\n        ) */\n  }\n\n  /* \n  onSave113() {\n  \n   let toSaveApplicant = {} ;\n  \n  \n   let aryKeys = Object.keys(Global.locData);\n   let key = \"\" ;\n  \n    \n  \n   for(let i = 0; i < aryKeys.length;i++) {\n      key = aryKeys[i] ;\n      \n       if (Global.locData[key] != Global.dbData[key] )   {\n          toSaveApplicant[key] = Global.locData[key] ;\n       }\n  }\n  \n  \n  \n  if (Global._id === \"\")\n    {\n  \n      this.restSvc.createApplicant(toSaveApplicant).then(\n        (rcvd) =>  {\n  \n            \n           \n             Global._id = rcvd['_id'] ;\n  \n             \n            for(let i = 0; i < Global.docs.length;i++) {\n                   // this.upLoadDocs(Global._id, Global.docs[i]['docType'], Global.docs[i]['table'], Global.docs[i]['file']) ;\n                   this.upLoadDocs(Global._id, Global.docs[i]['docType'], Global.docs[i]['docTable'], Global.docs[i]['docId'], Global.docs[i]['file']) ;\n       \n               }\n  \n        } ,   \n        (err) =>  {\n         \n        }\n        )\n  \n    }\n    else\n    {\n  \n      this.restSvc.updateApplicant(toSaveApplicant, Global._id ).then(\n        (msg) =>  {\n      \n          \n      \n         for(let i = 0; i < Global.docs.length;i++) {\n          this.upLoadDocs(Global._id, Global.docs[i]['docType'], Global.docs[i]['docTable'], Global.docs[i]['docId'], Global.docs[i]['file']) ;\n          }\n        \n        } ,\n        (err) =>  {\n      \n          alert(JSON.stringify(err)) ;\n      \n        }\n        )\n    }\n  \n    \n   \n  }\n   */\n\n  onSave() {\n\n    let objData = {};\n\n\n    let aryKeys = Object.keys(Global.locData);\n    let key = \"\";\n\n    if (this.tableName == \"trainer\") {\n      Global.makeProgramList();\n    }\n\n    for (let i = 0; i < aryKeys.length; i++) {\n      key = aryKeys[i];\n\n      if (Global.locData[key] != Global.svrData[key]) {\n        objData[key] = Global.locData[key];\n      }\n    }\n\n\n  \n\n    if (Global._id === \"\") {\n\n\n      this.restSvc.create(objData).then(\n        (rcvd) => {\n\n\n\n          Global._id = rcvd['_id'];\n\n\n          for (let i = 0; i < Global.docs.length; i++) {\n            this.upLoadDocs(Global._id, Global.docs[i]['docType'], Global.docs[i]['docTable'], Global.docs[i]['docId'], Global.docs[i]['file']);\n\n          }\n\n        },\n        (err) => {\n\n        }\n      )\n\n    }\n    else {\n\n\n\n      this.restSvc.update(objData, Global._id).then(\n        (msg) => {\n\n\n\n          for (let i = 0; i < Global.docs.length; i++) {\n            this.upLoadDocs(Global._id, Global.docs[i]['docType'], Global.docs[i]['docTable'], Global.docs[i]['docId'], Global.docs[i]['file']);\n          }\n\n        },\n        (err) => {\n\n          alert(JSON.stringify(err));\n\n        }\n      )\n    }\n\n\n\n  }\n\n  \n \n  \n  upLoadDocs(_id: string, docType, docTable, docId, file) {\n\n    const formData = new FormData();\n\n    formData.append('_id', _id);\n    formData.append('docTable', docTable);\n    formData.append('docId', docId);\n    formData.append('file', file);\n\n\n\n\n\n\n    file.inProgress = true;\n\n\n\n\n    this.restSvc.upLoadDoc(formData, docType).pipe(\n      map(event => {\n        switch (event.type) {\n          case HttpEventType.UploadProgress:\n            file.progress = Math.round(event.loaded * 100 / event.total);\n\n\n            break;\n          case HttpEventType.Response:\n            return event;\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        file.inProgress = false;\n\n        alert(error.message);\n        return of(`${file.data.name} upload failed.`);\n\n      })).subscribe((event: any) => {\n        if (typeof (event) === 'object') {\n\n\n\n        }\n      });\n\n  }\n\n  public onPdf() {\n    this.restSvc.onBtnAction('pdf');\n\n    /* \n    var data = document.getElementById('wysiwyg');\n    html2canvas(data).then(canvas => {\n    // Few necessary setting options\n    var imgWidth = 208;\n    var pageHeight = 295;\n    var imgHeight = canvas.height * imgWidth / canvas.width;\n    var heightLeft = imgHeight;\n     \n    const contentDataURL = canvas.toDataURL('image/png')\n    let pdf = new jspdf('p', 'mm', 'a4'); // A4 size page of PDF\n    var position = 0;\n    pdf.addImage(contentDataURL, 'PNG', 0, position, imgWidth, imgHeight)\n    pdf.save('new-file.pdf'); // Generated PDF\n    }); */\n  }\n  /* upLoadPhoto(_id) \n  {\n  \n  \n      \n  \n        const formData = new FormData();  \n        formData.append('file', Global.photoFile);  \n        formData.append('trainerFolder',_id);  \n  \n  \n     \n         Global.photoFile.inProgress = true;  \n  \n  \n  \n        this.restSvc.upLoadPhoto(formData).pipe(  \n          map(event => {  \n            switch (event.type) {  \n              case HttpEventType.UploadProgress:  \n              Global.photoFile.progress = Math.round(event.loaded * 100 / event.total);  \n              \n            \n              break;  \n              case HttpEventType.Response:  \n                return event;  \n            }  \n          }),  \n          catchError((error: HttpErrorResponse) => {  \n            Global.photoFile.inProgress = false;  \n         \n            alert(error.message) ;\n            return of(`${  Global.photoFile.data.name} upload failed.`); \n    \n          })).subscribe((event: any) => {  \n            if (typeof (event) === 'object') { \n           \n  \n  \n            }  \n          });   \n  \n  \n  \n  \n  \n  }\n   */\n\n\n\n\n\n  get logo() {\n    return Global.logo;\n  }\n\n  get domainName() {\n    return Global.domainName;\n  }\n\n\n\n\n}\n\n\n\n","<div class=\"container\">\n    <app-header></app-header>\n    <app-nav></app-nav>\n     \n    <router-outlet></router-outlet>\n\n</div>\n\n\n<dialog id=\"dlgErr\">\n\n    <div fxFlex fxLayout=\"column\">\n\n        <h1>Errors</h1>\n\n        <ol>\n            <div *ngFor=\"let err of errList;\">\n                <li> {{err}} </li>\n            </div>\n        </ol>\n\n\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"end center\" class=\"btn\">\n\n            <button (click)=\"onErrClose();\">Ok</button>\n        </div>\n    </div>\n\n</dialog>\n\n<dialog id=\"dlgAuth\">\n\n    <div *ngIf=\"dlgAuthMode===1\">\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <h1>LogIn via Email</h1>\n        </div>\n\n        <div fxLayout=\"row\" style=\"text-align: center;\">\n            Please provide an email address to receive an authorisation pin for access.\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <div fxLayout=\"column\">\n                <label for=\"email\">Email</label>\n                <input style=\"width: 330px;\" id=\"email\" name=\"email\" type=\"email\" [(ngModel)]=\"email\" />\n\n            </div>\n        </div>\n\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"btn\">\n         \n            <button [disabled]=\"disableAuthEmail()\" (click)=\"onAuthEmail();\">Ok</button> \n           \n        </div>\n\n    </div>\n\n\n    <div *ngIf=\"dlgAuthMode===2\">\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <h1>Enter PIN</h1>\n        </div>\n\n        <div fxLayout=\"row\" style=\"text-align: center;\">\n            Please provide the PIN code that was sent to the {{email}}.\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <div fxLayout=\"column\">\n                <label for=\"pin\">PIN</label>\n                <input style=\"width: 100px;\" id=\"pin\" name=\"pin\" type=\"pin\" [(ngModel)]=\"pin\" />\n\n            </div>\n        </div>\n\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"btn\">\n            <button [disabled]=\"disableAuthPin()\" (click)=\"onAuthPin();\">Ok</button>\n        </div>\n\n    </div>\n\n\n\n\n\n</dialog>\n\n<dialog id=\"dlgSubmit\">\n\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n        <h1>Submit Data</h1>\n    </div>\n\n    <div fxLayout=\"row\" style=\"text-align: center;\">\n        Data provided will be saved on the server and available for you.\n    </div>\n\n    <div *ngIf=\"clientName=='optimusMinds'\">\n\n   \n    <div class=\"chkBoxes\">\n\n        <input class=\"leftA\" id=\"declare\" name=\"declare\" type=\"checkbox\" [(ngModel)]=\"declareChk\" />\n        <label class=\"rightA\" for=\"declare\"> I declare that the infomation provided by me to be true.</label>\n\n        <input class=\"leftA\" id=\"share\" name=\"share\" type=\"checkbox\" [(ngModel)]=\"shareChk\" />\n        <label class=\"rightA\" for=\"declare\">I allow for my information to be shared with prospective\n            client\\s</label>\n\n        <br>\n\n       \n    </div>\n\n    <div  *ngIf=\"docs.length > 0\" fxLayout=\"row\" style=\"text-align: center;\">\n        Documents to be uploaded :\n    </div>\n\n     \n    <!-- <div *ngIf=\"docs.length > 0\"> Documents to be uploaded : </div> -->\n    <ol>\n        <div *ngFor=\"let doc of docs;\">\n            <li> {{doc.docTable}} : {{doc.docName}} </li>\n        </div>\n    </ol>\n    \n</div>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"btn\">\n        <button (click)=\"cancelSubmit();\">Cancel</button>\n        <button [disabled]=\"disableSubmit()\" (click)=\"okSubmit();\">Ok</button>\n    </div>\n\n</dialog>\n\n<dialog id=\"dlgSubmitOld\">\n\n\n    <div fxLayout=\"row\">\n\n\n        <div fxFlex fxLayout=\"column\">\n\n            <h1>Submit</h1>\n\n\n\n            <div class=\"chkBoxes\">\n\n                <input class=\"leftA\" id=\"declare\" name=\"declare\" type=\"checkbox\" [(ngModel)]=\"declareChk\" />\n                <label class=\"rightA\" for=\"declare\"> I declare that the infomation provided by me to be true.</label>\n\n                <input class=\"leftA\" id=\"share\" name=\"share\" type=\"checkbox\" [(ngModel)]=\"shareChk\" />\n                <label class=\"rightA\" for=\"declare\">I allow for my information to be shared with prospective\n                    client\\s</label>\n\n                <br>\n            </div>\n\n            <div *ngIf=\"docs.length > 0\"> Documents to be uploaded : </div>\n            <ol>\n                <div *ngFor=\"let doc of docs;\">\n                    <li> {{doc.docTable}} : {{doc.docName}} </li>\n                </div>\n            </ol>\n        </div>\n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"end center\" class=\"btn\">\n        <button (click)=\"cancelSubmit();\">Cancel</button>\n        <button [disabled]=\"disableSubmit()\" (click)=\"okSubmit();\">Ok</button>\n    </div>\n\n\n\n\n\n\n</dialog>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\n/* import { ModalModule} from '../app/lib/_modal' */\nimport { DialogModule} from '../app/lib/dialog'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { QuillModule } from 'ngx-quill'\nimport { HeaderInjector } from './lib/headerInjector';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { MatButtonModule } from '@angular/material/button' ;\nimport { MatCardModule } from '@angular/material/card' ;\n\nimport { HeaderComponent } from './header/header.component';\nimport { NavComponent } from './nav/nav.component';\n\nimport { AboutComponent } from './about/about.component';\nimport { CvSalon } from './cv-salon/cv-salon';\nimport { CvSalonComposerComponent } from './cv-salon/cv-salon-composer/cv-salon-composer.component';\nimport { CvSalonViewerComponent } from './cv-salon/cv-salon-viewer/cv-salon-viewer.component';\nimport { OptimusMindsAdminComponent } from './optimus-minds/optimus-minds-admin.component'; \nimport { OptimusMinds } from './optimus-minds/optimus-minds';\nimport { ProgramfilterPipe } from './lib/programfilter.pipe';\nimport { LmsComponent } from './lms/lms.component';\nimport { LmsMenuComponent } from './lms-menu/lms-menu.component';\nimport { LmsWindowComponent } from './lms-window/lms-window.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { from } from 'rxjs';\nimport { YouTubePlayerModule } from \"@angular/youtube-player\";\nimport { StudyCardComponent } from './study-card/study-card.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    NavComponent,\n    CvSalon,\n    CvSalonComposerComponent,\n    CvSalonViewerComponent,\n    OptimusMindsAdminComponent ,\n    OptimusMinds,\n    ProgramfilterPipe,\n    LmsComponent,\n    LmsMenuComponent,\n    LmsWindowComponent,\n    StudyCardComponent\n \n   \n   \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    FormsModule, \n    ReactiveFormsModule,\n   /*  ModalModule, */\n    DialogModule,\n    HttpClientModule,\n    QuillModule.forRoot(),\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatButtonModule,\n    YouTubePlayerModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass:  HeaderInjector, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Global } from '../../lib/global';\nimport { RestSvc } from '../../lib/restSvc';\nimport { DialogService } from '../../lib/dialog';\nimport { ActivatedRoute } from '@angular/router';\n/* import { Router } from '@angular/router';\nimport { threadId } from 'worker_threads'; */\n\n@Component({\n  selector: 'app-cv-salon-composer',\n  templateUrl: './cv-salon-composer.component.html',\n  styleUrls: ['./cv-salon-composer.component.scss']\n})\nexport class CvSalonComposerComponent implements OnInit {\n\n\n\n\n  name = \"\";\n  aboutMe = \"\";\n  mobileNbr = \"\";\n  dob = \"\";\n  address = \"\";\n\n\n  // Education\n  edus = [];\n  cboEdus = []\n  edu = \"\";\n  eduNote = \"\";\n  eduTitle = \"\";\n  eduSelected = \"Add Education\";\n  showEduTitle = true;\n\n\n  // Skills\n  skills = [];\n  cboSkills = []\n  cboSkillRates = [\"1 Star\", \"2 Stars\", \"3 Stars\", \"4 Stars\", \"5 Stars\"];\n  skillRate = \"\";\n  skill = \"\";\n  skillNote = \"\";\n  skillTitle = \"\";\n  skillSelected = \"Add Skill\";\n  showSkillTitle = true;\n\n\n  // Certs\n  certs = [];\n  cboCerts = []\n  cert = \"\";\n  certNote = \"\";\n  certTitle = \"\";\n  certSelected = \"Add Skill\";\n  showCertTitle = true;\n\n\n\n  // Acheivment\n  acheives = [];\n  cboAcheives = []\n  acheive = \"\";\n  acheiveNote = \"\";\n  acheiveTitle = \"\";\n  acheiveSelected = \"Add Acheivement\";\n  attachAcheive = \"\" ;\n  showAcheiveTitle = true;\n\n\n  // Expereinces\n  exps = [];\n  cboExps = [];\n  exp = \"\";\n  expNote = \"\";\n  expTitle = \"\";\n  expSelected = \"Add Education\";\n\n  // for Optimus Minds\n  moeExpiry = \"\";\n  moeFile = \"\" ;\n  program = \"\" ;\n  aiChk = false;\n  atRiskChk = false;\n  careerChk = false;\n  dramaChk = false;\n  danceChk = false;\n  itChk = false;\n  skillsChk = false;\n  tongueChk = false;\n  musicChk = false;\n  outdoorChk = false;\n  sportsChk = false;\n  visualChk = false;\n\n // certFile = \"\" ;\n  attachCert = \"\" ;\n\n  newCert = false ;\n  newEdu = false ;\n  newSkill = false ;\n  newExp = false ;\n  newAcheive = false ;\n\n\n\n\n\n\n\n  // End of Getters & Setters\n\n\n\n\n\n\n  showExpTitle = true;\n\n\n  constructor(private dlgSvc: DialogService, private restSvc: RestSvc, private _Activatedroute: ActivatedRoute) { }\n\n\n\n\n  ngOnInit(): void {\n\n\n\n\n    switch (this._Activatedroute.snapshot.url.toString().toLowerCase()) {\n      case \"optimusminds\":\n       Global.init('optimusMinds');\n        break;\n        case \"lms\":\n       Global.init('lms');\n        break;\n      default:\n        Global.init('cvSalon');\n        break;\n    }\n\n\n    let email = this._Activatedroute.snapshot.paramMap.get(\"email\");\n\n\n    if (email === null) {\n\n      Global.dlgAuthMode = 1;\n\n    \n      this.openModal('dlgAuth');\n\n    }\n    else {\n\n      this.restSvc.emailToken(email).then(\n        (msg) => {\n\n          let adminLevel = msg['adminLevel'];\n\n\n\n          Global.email = email;\n          Global.token = msg['token'];\n          Global.pin = msg['pin'];\n          Global._id = msg['_id'];\n          Global.adminLevel = adminLevel;\n          Global.dlgAuthMode = 2;\n\n          this.openModal('dlgAuth');\n\n        },\n        (err) => {\n\n          alert('Error: ' + JSON.stringify(err));\n\n        })\n\n    }\n\n\n\n  }\n\n\n  get clientName() {\n    return Global.clientName;\n  }\n\n  get programs() {\n    return Global.locData[\"programs\"];\n  }\n\n  openModal(id: string) {\n  \n    this.dlgSvc.open(id);\n  }\n\n// // Profile\n// onMe() {\n    \n// }\n\n// onVideo() {\n  \n// }\n\n\n// // Profile\n// onMyClassMates() {\n \n// }\n\n// onAssign1A() {\n \n// }\n\n// onAssign1B() {\n \n// }\n\n// onFinal() {\n\n// }\n\n// onClassChat() {\n  \n// }\n\n// onFeedBack() {\n  \n// }\n\n\n  // Moe\n  onMoe() {\n\n    this.moeExpiry = Global.locData['moeExpiry'];\n    this.moeFile = Global.locData['moeFile'];\n\n    this.aiChk = false;\n\n    this.atRiskChk = false;\n\n    this.careerChk = false;\n\n    this.danceChk = false;\n\n    this.dramaChk = false;\n\n\n    this.musicChk = false;\n\n    this.tongueChk = false;\n\n    this.skillsChk = false;\n\n    this.outdoorChk = false;\n\n    this.outdoorChk = false;\n\n    this.visualChk = false;\n\n    this.sportsChk = false;\n\n\n\n    for (let idx = 0; idx < Global.locData[\"programs\"].length; idx++) {\n\n      switch (Global.locData[\"programs\"][idx]) {\n        case \"AI\":\n          this.aiChk = true;\n          break;\n        case \"At Risk\":\n          this.atRiskChk = true;\n          break;\n        case \"Career Perparation\":\n          this.careerChk = true;\n          break;\n        case \"Dance\":\n          this.danceChk = true;\n          break;\n        case \"Drama\":\n          this.dramaChk = true;\n          break;\n        case \"IT\\\\Multimedia\":\n          this.itChk = true;\n          break;\n        case \"Music\":\n          this.musicChk = true;\n          break;\n        case \"Mother Tongue\":\n          this.tongueChk = true;\n          break;\n        case \"Life Skills\\Soft Skills\":\n          this.skillsChk = true;\n          break;\n        case \"Outdoor Education\":\n          this.outdoorChk = true;\n          break;\n        case \"Outdoor Education\":\n          this.outdoorChk = true;\n          break;\n        case \"Visual Arts\":\n          this.visualChk = true;\n          break;\n        case \"Sports\":\n          this.sportsChk = true;\n          break;\n\n\n\n      }\n    }\n\n\n    this.dlgSvc.open('dlgMoe');\n  }\n  /* \n  onAddMoeFile(evt) {\n  \n    alert('moe') ;\n    let doc = {}\n   \n    doc['docType'] = 'MOE License' ;\n    doc['docId'] = '0000' ;\n    doc['docTable'] = 'moe' ;\n  \n    doc['file'] = evt.target.files[0] ;\n    \n    Global.docs.push(doc) ;\n  \n  \n  }\n   */\n  onSaveMoe() {\n\n\n\n    if (this.moeExpiry == \"\") {\n      alert(\"Uanble to save, need MOE Expiry Date\");\n      return;\n    }\n\n    if (this.moeFile == \"\") {\n      alert(\"Uanble to save, need MOE License file\");\n      return;\n    }\n\n    let mPrograms = [];\n\n    if (this.aiChk) mPrograms.push('AI');\n    if (this.atRiskChk) mPrograms.push('At Risk');\n    if (this.careerChk) mPrograms.push('Career Perparation');\n    if (this.danceChk) mPrograms.push('Dance');\n    if (this.dramaChk) mPrograms.push('Drama');\n    if (this.itChk) mPrograms.push('IT\\\\Multimedia');\n    if (this.musicChk) mPrograms.push('Music');\n    if (this.tongueChk) mPrograms.push('Mother Tongue');\n    if (this.skillsChk) mPrograms.push('Life Skills\\Soft Skills');\n    if (this.outdoorChk) mPrograms.push('Outdoor Education');\n    if (this.visualChk) mPrograms.push('Visual Arts');\n    if (this.sportsChk) mPrograms.push('Sports');\n\n\n    if (mPrograms.length == 0) {\n      alert(\"Uanble to save, please select at least 1 training program\");\n      return;\n    }\n\n\n    Global.locData['moeExpiry'] = this.moeExpiry;\n    Global.locData['moeFile'] = this.moeFile;\n    Global.locData[\"programs\"] = mPrograms;\n    this.dlgSvc.close('dlgMoe');\n  }\n\n\n  onCancelMoe() {\n    this.dlgSvc.close('dlgMoe');\n  }\n\n\n  // Profile\n  onProfile() {\n    this.name = Global.locData['name'];\n    // Global.email =  Global.locData[\"email\"] ;\n    this.dob = Global.locData[\"dob\"];\n    this.mobileNbr = Global.locData[\"mobileNbr\"];\n    this.address = Global.locData[\"address\"];\n\n    this.dlgSvc.open('dlgProfile');\n  }\n\n  onCancelProfile() {\n    this.dlgSvc.close('dlgProfile');\n  }\n\n  onSaveProfile() {\n\n    Global.locData[\"name\"] = this.name;\n    Global.locData[\"email\"] = this.email;\n    Global.locData[\"dob\"] = this.dob;\n    Global.locData[\"mobileNbr\"] = this.mobileNbr;\n    Global.locData[\"address\"] = this.address.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br />');\n\n    this.dlgSvc.close('dlgProfile');\n\n  }\n\n\n  // About Me\n  onAboutMe() {\n    this.aboutMe = Global.locData['aboutMe'];\n    this.dlgSvc.open('dlgAboutMe');\n  }\n\n  onCancelAboutMe() {\n    this.dlgSvc.close('dlgAboutMe');\n  }\n\n  onSaveAboutMe() {\n\n    Global.locData[\"aboutMe\"] = this.aboutMe.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br />');\n\n    this.dlgSvc.close('dlgAboutMe');\n\n  }\n\n \n  onSelProgram(program) {\n    this.program = program ;\n  }\n\n\n// ------------------------------------------------------------------\n\n\nonAcheive() {\n  //acheive\n\n\n  this.acheives = Global.locData[\"acheives\"];\n  this.cboAcheives = [];\n\n\n\n  for (let idx = 0; idx < this.acheives.length; idx++) {\n    this.cboAcheives.push(this.acheives[idx]['title']);\n  }\n\n \n  \n  if (this.cboAcheives.length == 0) {\n    this.newAcheive = true;\n    this.acheive = \"\" ;\n    this.acheiveSelected = \"\";\n    this.acheiveTitle = \"\";\n    this.acheiveNote = \"\";\n  }\n  else {\n    this.newAcheive = false;\n    this.acheive = this.cboAcheives[0];\n    this.acheiveSelected = this.acheive; \n    this.acheiveNote = this.acheives[0]['note'];\n   \n  } \n\n  if (Global.clientName == 'optimusMinds') {\n\n    if ( this.newAcheive ) {\n             this.attachAcheive= \"\";\n    }\n    else {\n             this.attachAcheive = this.acheives[0]['file'];\n    }\n\n\n   \n\n  }\n\n  this.dlgSvc.open('dlgAcheive');\n\n \n\n}\n\nonNewAcheive(clientName) {\n\n  this.acheiveTitle = \"\" ;\n  this.acheiveNote = \"\" ;\n  this.newAcheive = true ;\n\n  if (Global.clientName == 'optimusMinds') {\n             this.attachAcheive= \"\";\n    }\n\n  \n\n}\n\n\nonSelAcheive(clientName, acheive) {\n\n  this.acheiveSelected = acheive;\n  let fidx = this.acheives.findIndex(x => x.title === acheive);\n\n  this.acheiveTitle = this.acheives[fidx]['title'];\n  this.acheiveNote = this.acheives[fidx]['note'];\n \n  if (Global.clientName == 'optimusMinds') {\n    this.attachAcheive = this.acheives[fidx]['file'];\n  \n  }\n\n}\n\nonExitAcheive(clientName) {\n  this.dlgSvc.close('dlgAcheive');\n  this.newAcheive = false ;\n\n\n}\n\nonSaveAcheive(clientName) {\n\n\n  \n  let strNote = this.acheiveNote.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br />');\n\n \n\n  if (this.newAcheive) {\n\n    if (Global.clientName == 'optimusMinds') {\n      this.acheives.push({ title: this.acheiveTitle, note: strNote, file:  this.attachAcheive });\n    }\n    else {\n      this.acheives.push({ title: this.acheiveTitle, note: strNote });\n    }\n \n  }\n  else {\n\n    let fidx = this.acheives.findIndex(x => x.title === this.acheiveSelected);\n\n    this.acheives[fidx]['note'] = strNote;\n\n    if (Global.clientName == 'optimusMinds') {\n      this.acheives[fidx]['file'] = this.attachAcheive ;\n    }\n  }\n\n\n \n  Global.locData[\"acheives\"] = this.acheives;\n  Global.svrData[\"acheives\"] = [];\n\n  this.dlgSvc.close('dlgAcheive');\n\n\n}\n\nonDelAcheive(clientName) {\n\nlet fidx = this.acheives.findIndex(x => x.title === this.acheiveSelected);\nthis.acheives.splice(fidx, 1);\n\n  \nGlobal.locData[\"acheives\"] = this.acheives;\nGlobal.svrData[\"acheives\"] = [];\n\nthis.newAcheive = false ;\n\nthis.dlgSvc.close('dlgAcheive');\n\n}\n\n// ------------------- ACHIEVE ------------------------------------- \n// ------------------- SKILL START ----------------------------------\n\nonSkill() {\n\n\n  this.skills = Global.locData[\"skills\"];\n  this.cboSkills = [];\n\n\n\n  for (let idx = 0; idx < this.skills.length; idx++) {\n    this.cboSkills.push(this.skills[idx]['title']);\n  }\n\n \n  \n  if (this.cboSkills.length == 0) {\n    this.newSkill = true;\n    this.skill = \"\" ;\n    this.skillSelected = \"\";\n    this.skillRate = \"1 Star\" ;\n  \n  }\n  else {\n    this.newSkill = false;\n    this.skill = this.cboSkills[0];\n    this.skillSelected = this.skill; \n    \n    this.skillRate = this.skills[0]['rate'];\n   \n  } \n\n  this.dlgSvc.open('dlgSkill');\n\n}\n\nonNewSkill(clientName) {\n\n  this.skillTitle = \"\" ;\n  this.skillRate = \"1 Star\" ;\n  this.newSkill = true ;\n\n}\n\n\nonSelSkill(clientName, skill) {\n\n  this.skillSelected = skill;\n  let fidx = this.skills.findIndex(x => x.title === skill);\n\n  this.skillTitle = this.skills[fidx]['title'];\n  this.skillRate = this.skills[fidx]['rate'];\n \n  \n  \n  }\n\n\nonExitSkill(clientName) {\n  this.dlgSvc.close('dlgSkill');\n  this.newSkill = false ;\n\n\n}\n\nonSaveSkill(clientName) {\n\n\n  \n  \n   \n\n  if (this.newSkill) {\n\n    this.skills.push({ title: this.skillTitle, rate:   this.skillRate });\n  }\n  else {\n\n    let fidx = this.skills.findIndex(x => x.title === this.skillSelected);\n\n    this.skills[fidx]['rate'] =   this.skillRate ;\n\n  }\n\n \n  Global.locData[\"skills\"] = this.skills;\n  Global.svrData[\"skills\"] = [];\n\n  this.dlgSvc.close('dlgSkill');\n\n\n}\n\nonDelSkill(clientName) {\n\nlet fidx = this.skills.findIndex(x => x.title === this.skillSelected);\nthis.skills.splice(fidx, 1);\n\n  \nGlobal.locData[\"skills\"] = this.skills;\nGlobal.svrData[\"skills\"] = [];\n\nthis.newSkill = false ;\n\nthis.dlgSvc.close('dlgSkill');\n\n}\n\n\n// ------------------- SKILL END \n\n// ------------------- EXP START ----------------------------------\n\nonExp() {\n\n\n  this.exps = Global.locData[\"exps\"];\n  this.cboExps = [];\n\n\n\n  for (let idx = 0; idx < this.exps.length; idx++) {\n    this.cboExps.push(this.exps[idx]['title']);\n  }\n\n \n  \n  if (this.cboExps.length == 0) {\n    this.newExp = true;\n    this.exp = \"\" ;\n    this.expSelected = \"\";\n    this.expNote = \"\" ; \n    this.expTitle = \"\";\n  \n  }\n  else {\n    this.newExp = false;\n    this.exp = this.cboExps[0];\n    this.expSelected = this.exp; \n    this.expNote = this.exps[0]['note'];\n   \n  } \n\n  this.dlgSvc.open('dlgExp');\n\n}\n\nonNewExp(clientName) {\n\n  this.expTitle = \"\" ;\n  this.expNote = \"\" ;\n  this.newExp = true ;\n\n}\n\n\nonSelExp(clientName, exp) {\n\n  this.expSelected = exp;\n  let fidx = this.exps.findIndex(x => x.title === exp);\n\n  this.expTitle = this.exps[fidx]['title'];\n  this.expNote = this.exps[fidx]['note'];\n \n  \n  \n  }\n\n\nonExitExp(clientName) {\n  this.dlgSvc.close('dlgExp');\n  this.newExp = false ;\n\n\n}\n\nonSaveExp(clientName) {\n\n\n  \n  let strNote = this.expNote.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br />');\n\n   \n\n  if (this.newExp) {\n\n    this.exps.push({ title: this.expTitle, note: strNote });\n  }\n  else {\n\n    let fidx = this.exps.findIndex(x => x.title === this.expSelected);\n\n    this.exps[fidx]['note'] = strNote;\n\n  }\n\n \n  Global.locData[\"exps\"] = this.exps;\n  Global.svrData[\"exps\"] = [];\n\n  this.dlgSvc.close('dlgExp');\n\n\n}\n\nonDelExp(clientName) {\n\nlet fidx = this.exps.findIndex(x => x.title === this.expSelected);\nthis.exps.splice(fidx, 1);\n\n  \nGlobal.locData[\"exps\"] = this.exps;\nGlobal.svrData[\"exps\"] = [];\n\nthis.newExp = false ;\n\nthis.dlgSvc.close('dlgExp');\n\n}\n\n\n// ------------------- EXP END ------------------------------------\n// ------------------- EDU START ----------------------------------\n\nonEdu() {\n\n\n  this.edus = Global.locData[\"edus\"];\n  this.cboEdus = [];\n\n\n\n  for (let idx = 0; idx < this.edus.length; idx++) {\n    this.cboEdus.push(this.edus[idx]['title']);\n  }\n\n \n  \n  if (this.cboEdus.length == 0) {\n    this.newEdu = true;\n    this.edu = \"\" ;\n    this.eduSelected = \"\";\n    this.eduNote = \"\" ; \n    this.eduTitle = \"\" ;\n  \n  }\n  else {\n    this.newEdu = false;\n    this.edu = this.cboEdus[0];\n    this.eduSelected = this.edu; \n    this.eduNote = this.edus[0]['note'];\n   \n  } \n\n  this.dlgSvc.open('dlgEdu');\n\n}\n\nonNewEdu(clientName) {\n\n  this.eduTitle = \"\" ;\n  this.eduNote = \"\" ;\n  this.newEdu = true ;\n\n}\n\n\nonSelEdu(clientName, edu) {\n\n  this.eduSelected = edu;\n  let fidx = this.edus.findIndex(x => x.title === edu);\n\n  this.eduTitle = this.edus[fidx]['title'];\n  this.eduNote = this.edus[fidx]['note'];\n \n  \n  \n  }\n\n\nonExitEdu(clientName) {\n  this.dlgSvc.close('dlgEdu');\n  this.newEdu = false ;\n\n\n}\n\nonSaveEdu(clientName) {\n\n\n  \n  let strNote = this.eduNote.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br />');\n\n   \n\n  if (this.newEdu) {\n\n    this.edus.push({ title: this.eduTitle, note: strNote });\n  }\n  else {\n\n    let fidx = this.edus.findIndex(x => x.title === this.eduSelected);\n\n    this.edus[fidx]['note'] = strNote;\n\n  }\n\n \n  Global.locData[\"edus\"] = this.edus;\n  Global.svrData[\"edus\"] = [];\n\n  this.dlgSvc.close('dlgEdu');\n\n\n}\n\nonDelEdu(clientName) {\n\nlet fidx = this.edus.findIndex(x => x.title === this.eduSelected);\nthis.edus.splice(fidx, 1);\n\n  \nGlobal.locData[\"edus\"] = this.edus;\nGlobal.svrData[\"edus\"] = [];\n\nthis.newEdu = false ;\n\nthis.dlgSvc.close('dlgEdu');\n\n}\n\n// -------------------- EDU END ------------------------------------\n// -------------------- CERT START --------------------------------\n\nonCert() {\n\n\n  this.certs = Global.locData[\"certs\"];\n  this.cboCerts = [];\n\n\n\n  for (let idx = 0; idx < this.certs.length; idx++) {\n    this.cboCerts.push(this.certs[idx]['title']);\n  }\n\n  \n  if (this.cboCerts.length == 0) {\n    this.newCert = true;\n    this.cert = \"\" ;\n    this.certSelected = \"\";\n    this.program = \"\" ;\n    this.certTitle = \"\"; \n  \n  }\n  else {\n    this.newCert = false;\n    this.cert = this.cboCerts[0];\n    this.certSelected = this.cert; \n    this.program = this.certs[0]['program'];\n  } \n  \n\n  if (Global.clientName == 'optimusMinds') {\n\n\n    if (this.newCert ) {\n             this.attachCert = \"\";\n    }\n    else {\n      this.attachCert = this.certs[0]['file'];\n     \n    }\n\n    this.dlgSvc.open('dlgCertOptimusMinds');\n  }\n  else {\n  \n  \n    if (this.newCert ) {\n      this.certNote = \"\";\n      \n    }\n    else {\n     // this.newCert = false;\n      this.certNote = this.certs[0]['note'];\n     \n    }\n\n    this.dlgSvc.open('dlgCert');\n\n  }\n\n\n\n}\n\n\n\n  onNewCert(clientName) {\n\n    this.certTitle = \"\" ;\n    this.attachCert = \"\";\n    this.certNote = \"\" ;\n    this.program = this.certs[0]['program'] ;\n    this.newCert = true ;\n  \n  }\n \n\n  onSelCert(clientName, cert) {\n\n    this.certSelected = cert;\n    let fidx = this.certs.findIndex(x => x.title === cert);\n \n    this.certTitle = this.certs[fidx]['title'];\n\n    switch(clientName) {\n\n      case \"cvSalon\":\n        this.certNote = this.certs[fidx]['note'];\n        break ;\n      case \"optimusMinds\":\n        this.attachCert =  this.certs[fidx]['file'];\n        break ;\n          \n  \n    }\n \n    \n    }\n  \n/* \n onSelCertOptimusMinds(cert) {\n\n       this.certSelected = cert;\n\n      let fidx = this.certs.findIndex(x => x.title === cert);\n      this.certTitle = this.certs[fidx]['title'];\n      this.attachCert =  this.certs[fidx]['file'];\n      this.program = this.certs[fidx]['program'];\n      this.showCertTitle = false;\n\n    } */\n\n\nonExitCert(clientName) {\n\n  this.newCert = false ;\n\n  switch(clientName) {\n\n    case \"cvSalon\":\n      this.dlgSvc.close('dlgCert');\n      break ;\n    case \"optimusMinds\":\n      this.dlgSvc.close('dlgCertOptimusMinds');\n      break ;\n        \n\n  }\n\n\n}\n\nonSaveCert(clientName) {\n\n  switch(clientName) {\n\n    case \"cvSalon\":\n     this.saveCertCvSalon() ;\n      break ;\n    case \"optimusMinds\":\n      this.saveCertOptimusMinds() ;\n      break ;\n        \n\n  }\n\n}\n\nonDelCert(clientName) {\n\n  let fidx = this.certs.findIndex(x => x.title === this.certSelected);\n  this.certs.splice(fidx, 1);\n\n    \n  Global.locData[\"certs\"] = this.certs;\n  Global.svrData[\"certs\"] = [];\n\n  this.newCert = false ;\n\n  switch(clientName) {\n\n    case \"cvSalon\":\n      this.dlgSvc.close('dlgCert');\n      break ;\n    case \"optimusMinds\":\n      this.dlgSvc.close('dlgCertOptimusMinds');\n      break ;\n        \n\n  }\n\n}\n\n\nsaveCertCvSalon() {\n\n\n\n    let strNote = this.certNote.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br />');\n\n      \n\n    if (this.newCert) {\n\n      this.certs.push({ title: this.certTitle, note: strNote });\n    }\n    else {\n\n      let fidx = this.certs.findIndex(x => x.title === this.certSelected);\n\n      this.certs[fidx]['note'] = strNote;\n\n    }\n\n   \n    Global.locData[\"certs\"] = this.certs;\n    Global.svrData[\"certs\"] = [];\n\n    this.dlgSvc.close('dlgCert');\n\n\n}\n\nsaveCertOptimusMinds() {\n\n   // let strNote = this.certNote.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br />');\n\n    if (this.newCert) {\n\n      this.certs.push({ title: this.certTitle, program: this.program, file: this.attachCert });\n    }\n    else {\n\n      let fidx = this.certs.findIndex(x => x.title === this.certSelected);\n      this.certs[fidx]['program'] = this.program ;\n      this.certs[fidx]['file'] = this.attachCert ;\n    }\n\n\n\n\n    Global.locData[\"certs\"] = this.certs;\n    Global.svrData[\"certs\"] = [];\n\n    this.newCert = false ;\n\n    this.dlgSvc.close('dlgCertOptimusMinds');\n\n\n}\n  \n \n\n//---------------------   CERT END ------------------------------------------------\n\nonSelSkillRate(rate) {\n\n    this.skillRate = rate ;\n}\n\n\n  /* onAcheive() {\n\n    this.acheives = Global.locData[\"acheives\"];\n    this.cboAcheives = [];\n\n    for (let idx = 0; idx < this.acheives.length; idx++) {\n      this.cboAcheives.push(this.acheives[idx]['title']);\n    }\n\n    this.cboAcheives.push('Add Acheivement');\n    this.acheive = this.cboAcheives[0];\n    this.acheiveSelected = this.acheive;\n\n    if (this.acheive == 'Add Acheivement') {\n      this.showAcheiveTitle = true;\n\n    }\n    else {\n      this.showAcheiveTitle = false;\n      this.acheiveNote = this.acheives[0]['note'];\n    }\n\n\n    this.dlgSvc.open('dlgAcheive');\n\n\n  }\n\n  onSelAcheive(acheive) {\n\n    this.acheiveSelected = acheive;\n\n    if (acheive == 'Add Acheivement') {\n      this.acheiveNote = '';\n      this.acheiveTitle = '';\n      this.showAcheiveTitle = true;\n    }\n    else {\n\n      let fidx = this.acheives.findIndex(x => x.title === acheive);\n      this.acheiveNote = this.acheives[fidx]['note'];\n      this.acheiveTitle = this.acheive[fidx]['title'];\n      this.showAcheiveTitle = false;\n\n    }\n\n\n  }\n\n  onCancelAcheive() {\n    this.dlgSvc.close('dlgAcheive');\n  }\n\n  onSaveAcheive() {\n\n    let strNote = this.acheiveNote.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br />');\n\n    if (this.acheiveSelected == 'Add Acheivement') {\n\n      this.acheives.push({ title: this.acheiveTitle, note: strNote });\n    }\n    else {\n      let fidx = this.acheives.findIndex(x => x.title === this.acheiveSelected);\n\n      this.acheives[fidx]['note'] = strNote;\n\n    }\n\n\n\n\n    Global.locData[\"acheives\"] = this.acheives;\n    Global.svrData[\"acheives\"] = [];\n\n\n    this.dlgSvc.close('dlgAcheive');\n\n\n  }\n\n  onDelAcheive() {\n\n    let fidx = this.acheives.findIndex(x => x.title === this.acheiveSelected);\n    this.acheives.splice(fidx, 1);\n\n    this.dlgSvc.close('dlgAcheive');\n    Global.locData[\"acheives\"] = this.acheives;\n    Global.svrData[\"acheives\"] = [];\n\n  }\n */\n\n/* \n  onSkill() {\n\n\n    this.skills = Global.locData[\"skills\"];\n    this.cboSkills = [];\n\n\n\n    for (let idx = 0; idx < this.skills.length; idx++) {\n      this.cboSkills.push(this.skills[idx]['title']);\n    }\n\n\n\n    this.cboSkills.push('Add Skill');\n    this.skill = this.cboSkills[0];\n\n    this.skillSelected = this.skill;\n\n\n    if (this.skill == 'Add Skill') {\n      this.showSkillTitle = true;\n      this.skillRate = \"1 Star\";\n    }\n    else {\n      this.showSkillTitle = false;\n      this.skillRate = this.skills[0]['rate'];\n    }\n\n\n\n\n    this.dlgSvc.open('dlgSkill');\n\n\n  }\n\n  onSelSkill(skill) {\n\n    this.skillSelected = skill;\n\n    if (skill == 'Add Skill') {\n      this.skillNote = '';\n      this.skillTitle = '';\n      this.showSkillTitle = true;\n    }\n    else {\n\n      let fidx = this.skills.findIndex(x => x.title === skill);\n      this.skillNote = this.skills[fidx]['note'];\n      this.skillTitle = this.skills[fidx]['title'];\n      this.showSkillTitle = false;\n\n    }\n\n\n  }\n\n\n  onSelSkillRate(rate) {\n\n\n  }\n\n  onCancelSkill() {\n    this.dlgSvc.close('dlgSkill');\n  }\n\n  onSaveSkill() {\n\n\n    if (this.skillSelected == 'Add Skill') {\n\n\n\n      this.skills.push({ title: this.skillTitle, rate: this.skillRate });\n    }\n    else {\n\n\n      let fidx = this.skills.findIndex(x => x.title === this.skillSelected);\n\n      this.skills[fidx]['rate'] = this.skillRate;\n\n    }\n\n\n\n\n    Global.locData[\"skills\"] = this.skills;\n    Global.svrData[\"skills\"] = [];\n\n\n    this.dlgSvc.close('dlgSkill');\n\n\n  }\n\n  onDelSkill() {\n\n    let fidx = this.skills.findIndex(x => x.title === this.skillSelected);\n    this.skills.splice(fidx, 1);\n\n    this.dlgSvc.close('dlgSkill');\n    Global.locData[\"skills\"] = this.skills;\n    Global.svrData[\"skills\"] = [];\n\n  }\n\n\n */\n\n  // Education \n \n/* \n  onSelEdu(edu) {\n\n    this.eduSelected = edu;\n\n    if (edu == 'Add Education') {\n\n      this.eduNote = '';\n      this.eduTitle = '';\n      this.showEduTitle = true;\n    }\n    else {\n\n\n      let fidx = this.edus.findIndex(x => x.title === edu);\n      this.eduNote = this.edus[fidx]['note'];\n      this.eduTitle = this.edus[fidx]['title'];\n      this.showEduTitle = false;\n\n    }\n\n\n  }\n\n\n  onCancelEdu() {\n    this.dlgSvc.close('dlgEdu');\n  }\n\n  onSaveEdu() {\n\n    let strNote = this.eduNote.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br />');\n\n    if (this.eduSelected == 'Add Education') {\n\n      this.edus.push({ title: this.eduTitle, note: strNote });\n    }\n    else {\n      let fidx = this.edus.findIndex(x => x.title === this.eduSelected);\n\n      this.edus[fidx]['note'] = strNote;\n\n    }\n\n\n\n\n    Global.locData[\"edus\"] = this.edus;\n    Global.svrData[\"edus\"] = [];\n\n\n    this.dlgSvc.close('dlgEdu');\n\n\n  }\n\n  onDelEdu() {\n\n    let fidx = this.edus.findIndex(x => x.title === this.eduSelected);\n    this.edus.splice(fidx, 1);\n\n    this.dlgSvc.close('dlgEdu');\n    Global.locData[\"edus\"] = this.edus;\n    Global.svrData[\"edus\"] = [];\n\n  }\n */\n\n  // Experience\n /*  onExp() {\n\n    this.exps = Global.locData[\"exps\"];\n    this.cboExps = [];\n\n    for (let idx = 0; idx < this.exps.length; idx++) {\n      this.cboExps.push(this.exps[idx]['title']);\n    }\n\n    this.cboExps.push('Add Experience');\n    this.exp = this.cboExps[0];\n    this.expSelected = this.exp;\n\n    if (this.exp == 'Add Experience') {\n      this.showExpTitle = true;\n\n    }\n    else {\n      this.showExpTitle = false;\n      this.expNote = this.exps[0]['note'];\n    }\n\n\n    this.dlgSvc.open('dlgExp');\n\n  }\n\n\n  onSelExp(exp) {\n\n    this.expSelected = exp;\n\n    if (exp == 'Add Experience') {\n      ;\n      this.expNote = '';\n      this.expTitle = '';\n      this.showExpTitle = true;\n    }\n    else {\n\n\n      let fidx = this.exps.findIndex(x => x.title === exp);\n      this.expNote = this.exps[fidx]['note'];\n      this.expTitle = this.exps[fidx]['title'];\n      this.showExpTitle = false;\n\n    }\n\n\n  }\n\n  onCancelExp() {\n    this.dlgSvc.close('dlgExp');\n  }\n\n  onSaveExp() {\n\n    let strNote = this.expNote.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br />');\n\n    if (this.expSelected == 'Add Experience') {\n      this.exps.push({ title: this.expTitle, note: strNote });\n    }\n    else {\n      let fidx = this.exps.findIndex(x => x.title === this.expSelected);\n\n      this.exps[fidx]['note'] = strNote;\n\n    }\n\n    this.dlgSvc.close('dlgExp');\n    Global.locData[\"exps\"] = this.exps;\n    Global.svrData[\"exps\"] = []\n\n  }\n\n  onDelExp() {\n\n    let fidx = this.exps.findIndex(x => x.title === this.expSelected);\n    this.exps.splice(fidx, 1);\n    Global.locData[\"exps\"] = this.exps;\n    this.dlgSvc.close('dlgExp');\n\n  } */\n\n\n  // Photo\n  onAttach(evt, docType: string) {\n\n\n    var imagePath;\n    var imgURL: any;\n    let doc = {}\n\n    doc['docType'] = docType;\n    doc['docId'] = Global.docs.length + 1;\n    doc['docTable'] = docType;\n    doc['file'] = evt.target.files[0];\n    doc['docName'] = evt.target.files[0].name;\n\n   \n\n   \n\n    switch (docType) {\n      case \"photo\":\n        var mimeType = evt.target.files[0].type;\n        if (mimeType.match(/image\\/*/) == null) {\n          alert(\"Only images are supported.\");\n          return;\n        }\n\n\n        this.restSvc.makeImgFromBlob(evt.target.files[0])\n\n        break;\n      case \"moe\":\n        this.moeFile = evt.target.files[0].name;\n        break;\n      case \"cert\":   \n        this.attachCert = evt.target.files[0].name;\n        break ;\n        case \"acheive\":   \n        this.attachAcheive = evt.target.files[0].name;\n        break ;\n        default:\n        break;\n\n      \n\n    }\n\n\n\n\n\n    Global.docs.push(doc)\n\n    /*  doc['docType'] = 'Photo' ;\n     doc['id'] = '0000' ;\n     doc['table'] = 'photo' ; */\n\n    /*  doc['docType'] = 'Photo' ;\n     doc['docId'] = '0000' ;\n     doc['docTable'] = 'photo' ;\n \n     doc['file'] = evt.target.files[0] ;\n     \n     Global.docs.push(doc) ;\n     //Global.photoFile  = evt.target.files[0]; \n     \n     this.restSvc.makeImgFromBlob(evt.target.files[0]) ; */\n\n  }\n\n  get email() {\n    return Global.email;\n  }\n\n  set email(value) {\n    Global.email = value;\n  }\n\n\n}","<div class=\"mainContent\">\n  <div class=\"bg\" style=\"height:80vh;\">\n\n\n    <div *ngIf=\"clientName=='optimusMinds'\">\n\n      <div class=\"boxMoe\" (click)=\"onMoe()\">\n        MOE License\n      </div>\n\n      <div class=\"iconMoe\" (click)=\"onMoe()\">\n        <i class=\"material-icons\">play_arrow</i>\n      </div>\n\n    </div>\n\n\n\n    <div *ngIf=\"clientName!='lms'\">\n\n    <div class=\"box0\" (click)=\"onProfile()\">\n      Personnal information \n    </div>\n  \n\n\n    <div class=\"box1\" (click)=\"onAboutMe()\">\n      About Me\n    </div>\n\n\n    <div class=\"box2\" (click)=\"photo.click()\">\n      Photo\n      <input #photo type=\"file\" (change)=\"onAttach($event,'photo')\" style=\"display:none;\" />\n    </div>\n\n    <div class=\"box3\" (click)=\"onEdu()\">\n      Educational information\n    </div>\n\n    <div class=\"box4\" (click)=\"onExp()\">\n      Work Experiences\n    </div>\n\n    <div class=\"box5\" (click)=\"onCert()\">\n      Certifications\n    </div>\n\n\n    <div class=\"box6\" (click)=\"onSkill()\">\n      Skills\n    </div>\n\n\n    <div class=\"box7\" (click)=\"onAcheive()\">\n      Acheivements\n    </div>\n\n\n\n\n    <div class=\"icon0\" (click)=\"onProfile()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n\n    <div class=\"icon1\" (click)=\"onAboutMe()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n    <div class=\"icon2\" (click)=\"photo.click()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n    <div class=\"icon3\" (click)=\"onEdu()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n    <div class=\"icon4\" (click)=\"onExp()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n\n    <div class=\"icon5\" (click)=\"onCert()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n    <div class=\"icon6\" (click)=\"onSkill()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n    <div class=\"icon7\" (click)=\"onAcheive()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n   </div>\n\n   \n  </div>\n</div>\n\n<dialog id=\"dlgProfile\">\n\n  <div fxFlex fxLayout=\"column\">\n\n\n    <label for=\"name\">Your Name *</label>\n    <input id=\"name\" name=\"name\" type=\"text\" [(ngModel)]=\"name\">\n\n\n    <div fxLayout=\"row wrap\">\n\n\n      <div fxLayout=\"column\">\n        <label for=\"dob\">Date of Birth *</label>\n        <input type=\"date\" id=\"dob\" name=\"dob\" [(ngModel)]=\"dob\" />\n      </div>\n\n      <div fxLayout=\"column\">\n        <label for=\"mobileNbr\">Mobile# *</label>\n        <input id=\"mobileNbr\" name=\"mobileNbr\" type=\"text\" [(ngModel)]=\"mobileNbr\" />\n      </div>\n\n\n    </div>\n\n\n    <label for=\"email\">Email</label>\n    <input disabled id=\"email\" name=\"email\" type=\"text\" [(ngModel)]=\"email\" />\n\n\n\n\n    <label for=\"note\">Address</label>\n\n    <quill-editor class=\"richText\" [(ngModel)]=\"address\" [modules]=\"{ toolbar: false }\">\n    </quill-editor>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <div class=\"flushRight\"></div>\n\n\n      <button class=\"button-3d\" (click)=\"onCancelProfile()\">Cancel</button>\n      <button class=\"button-3d\" (click)=\"onSaveProfile()\">Save</button>\n\n    </div>\n  </div>\n\n</dialog>\n\n<dialog id=\"dlgAboutMe\">\n\n  <div fxFlex fxLayout=\"column\">\n\n\n\n    <label for=\"note\">About Me</label>\n\n    <quill-editor class=\"richText\" [(ngModel)]=\"aboutMe\" [modules]=\"{ toolbar: false }\">\n    </quill-editor>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <div class=\"flushRight\"></div>\n\n\n      <button class=\"button-3d\" (click)=\"onCancelAboutMe()\">Cancel</button>\n      <button class=\"button-3d\" (click)=\"onSaveAboutMe()\">Save</button>\n\n    </div>\n  </div>\n</dialog>\n\n\n<dialog id=\"dlgEdu\">\n\n  <div fxFlex fxLayout=\"column\">\n\n\n\n    <label  *ngIf=\"!newEdu\" class=\"labelData\" for=\"edu\">Select Certification</label>\n    <select *ngIf=\"!newEdu\" class=\"inputData\" id=\"edu\" name=\"edu\" (change)=\"onSelEdu('cvSalon',$event.target.value)\" [(ngModel)]=\"edu\">\n      <option [value]=\"edu\" *ngFor=\"let edu of cboEdus\">\n        {{edu}}\n      </option>\n    </select>\n\n\n    <label *ngIf=\"newEdu\" for=\"eduTitle\">Certification</label>\n    <input *ngIf=\"newEdu\" id=\"eduTitle\" name=\"eduTitle\" type=\"text\" [(ngModel)]=\"eduTitle\" />\n\n\n    <label for=\"eduNote\">Description</label>\n\n    <quill-editor class=\"richText\" [(ngModel)]=\"eduNote\" [modules]=\"{ toolbar: false }\">\n    </quill-editor>\n\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <div class=\"flushRight\"></div>\n\n\n      <button *ngIf=\"!newEdu\"  class=\"button-3d\" (click)=\"onNewEdu('cvSalon')\">New</button>\n      <button *ngIf=\"!newEdu\"  class=\"button-3d\" (click)=\"onDelEdu('cvSalon')\">Delete</button>\n      <button class=\"button-3d\" (click)=\"onExitEdu('cvSalon')\">Exit</button>\n      <button class=\"button-3d\" (click)=\"onSaveEdu('cvSalon')\">Save</button> \n\n\n    </div>\n  </div>\n\n\n\n\n</dialog>\n\n\n <dialog id=\"dlgExp\">\n\n  <div fxFlex fxLayout=\"column\">\n\n\n\n    <label  *ngIf=\"!newExp\" class=\"labelData\" for=\"exp\">Select Experience</label>\n    <select *ngIf=\"!newExp\" class=\"inputData\" id=\"exp\" name=\"exp\" (change)=\"onSelExp('cvSalon',$event.target.value)\" [(ngModel)]=\"exp\">\n      <option [value]=\"exp\" *ngFor=\"let exp of cboExps\">\n        {{exp}}\n      </option>\n    </select>\n\n\n    <label *ngIf=\"newExp\" for=\"expTitle\">Experience</label>\n    <input *ngIf=\"newExp\" id=\"expTitle\" name=\"expTitle\" type=\"text\" [(ngModel)]=\"expTitle\" />\n\n\n    <label for=\"expNote\">Description</label>\n\n    <quill-editor class=\"richText\" [(ngModel)]=\"expNote\" [modules]=\"{ toolbar: false }\">\n    </quill-editor>\n\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <div class=\"flushRight\"></div>\n\n\n      <button *ngIf=\"!newExp\"  class=\"button-3d\" (click)=\"onNewExp('cvSalon')\">New</button>\n      <button *ngIf=\"!newExp\"  class=\"button-3d\" (click)=\"onDelExp('cvSalon')\">Delete</button>\n      <button class=\"button-3d\" (click)=\"onExitExp('cvSalon')\">Exit</button>\n      <button class=\"button-3d\" (click)=\"onSaveExp('cvSalon')\">Save</button> \n\n\n    </div>\n  </div>\n\n\n\n\n</dialog>\n\n<dialog id=\"dlgSkill\">\n\n  <div fxFlex fxLayout=\"column\">\n\n\n\n    <label  *ngIf=\"!newSkill\" class=\"labelData\" for=\"skill\">Select Skill</label>\n    <select *ngIf=\"!newSkill\" class=\"inputData\" id=\"skill\" name=\"skill\" (change)=\"onSelSkill('cvSalon',$event.target.value)\" [(ngModel)]=\"skill\">\n      <option [value]=\"skill\" *ngFor=\"let skill of cboSkills\">\n        {{skill}}\n      </option>\n    </select>\n\n\n    <label *ngIf=\"newSkill\" for=\"skillTitle\">Skill</label>\n    <input *ngIf=\"newSkill\" id=\"skillTitle\" name=\"skillTitle\" type=\"text\" [(ngModel)]=\"skillTitle\" />\n\n\n   <!--  <label for=\"skillNote\">Description</label>\n\n    <quill-editor class=\"richText\" [(ngModel)]=\"skillNote\" [modules]=\"{ toolbar: false }\">\n    </quill-editor> -->\n\n\n    <label for=\"skillRate\">Skill Rating</label>\n\n    <select class=\"inputData\" id=\"skillRate\" name=\"skillRate\" (change)=\"onSelSkillRate($event.target.value)\"\n      [(ngModel)]=\"skillRate\">\n      <option [value]=\"skillRate\" *ngFor=\"let skillRate of cboSkillRates\">\n        {{skillRate}}\n      </option>\n    </select>\n\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <div class=\"flushRight\"></div>\n\n\n      <button *ngIf=\"!newSkill\"  class=\"button-3d\" (click)=\"onNewSkill('cvSalon')\">New</button>\n      <button *ngIf=\"!newSkill\"  class=\"button-3d\" (click)=\"onDelSkill('cvSalon')\">Delete</button>\n      <button class=\"button-3d\" (click)=\"onExitSkill('cvSalon')\">Exit</button>\n      <button class=\"button-3d\" (click)=\"onSaveSkill('cvSalon')\">Save</button> \n\n\n    </div>\n  </div>\n\n\n\n\n</dialog>\n\n<dialog id=\"dlgAcheive\">\n\n  <div fxFlex fxLayout=\"column\">\n\n\n\n    <label  *ngIf=\"!newAcheive\" class=\"labelData\" for=\"acheive\">Select Acheivement</label>\n    <select *ngIf=\"!newAcheive\" class=\"inputData\" id=\"acheive\" name=\"acheive\" (change)=\"onSelAcheive('cvSalon',$event.target.value)\" [(ngModel)]=\"acheive\">\n      <option [value]=\"acheive\" *ngFor=\"let acheive of cboAcheives\">\n        {{acheive}}\n      </option>\n    </select>\n\n\n    <label *ngIf=\"newAcheive\" for=\"acheiveTitle\">Acheivement</label>\n    <input *ngIf=\"newAcheive\" id=\"acheiveTitle\" name=\"acheiveTitle\" type=\"text\" [(ngModel)]=\"acheiveTitle\" />\n\n\n    <label for=\"acheiveNote\">Description</label>\n\n    <quill-editor class=\"richText\" [(ngModel)]=\"acheiveNote\" [modules]=\"{ toolbar: false }\">\n    </quill-editor>\n\n    <br>\n\n    <div *ngIf=\"attachAcheive\" style=\"border: thin solid black;\" fxLayoutAlign=\"center center\">\n      <span> <i class=\"material-icons\" style=\"vertical-align: -6px;\">attachment</i> {{attachAcheive}}    </span>\n     </div>\n\n     \n    <div *ngIf=\"clientName=='optimusMinds'\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n      <button type=\"button\" (click)=\"acheiveFile.click()\">\n        <span>Attach Document</span>\n        <input #acheiveFile type=\"file\" (change)=\"onAttach($event,'acheive')\" style=\"display:none;\" />\n      </button>\n\n    </div>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <div class=\"flushRight\"></div>\n\n\n      <button *ngIf=\"!newAcheive\"  class=\"button-3d\" (click)=\"onNewAcheive('cvSalon')\">New</button>\n      <button *ngIf=\"!newAcheive\"  class=\"button-3d\" (click)=\"onDelAcheive('cvSalon')\">Delete</button>\n      <button class=\"button-3d\" (click)=\"onExitAcheive('cvSalon')\">Exit</button>\n      <button class=\"button-3d\" (click)=\"onSaveAcheive('cvSalon')\">Save</button> \n\n\n    </div>\n  </div>\n\n\n\n\n</dialog>\n\n<dialog id=\"dlgCert\">\n\n  <div fxFlex fxLayout=\"column\">\n\n\n    <label *ngIf=\"!newCert\" class=\"labelData\" for=\"cert\">Select Certification</label>\n    <select *ngIf=\"!newCert\" class=\"inputData\" id=\"cert\" name=\"cert\" (change)=\"onSelCert('cvSalon',$event.target.value)\" [(ngModel)]=\"cert\">\n      <option [value]=\"cert\" *ngFor=\"let cert of cboCerts\">\n        {{ cert }}\n      </option>\n    </select>\n\n\n    <label *ngIf=\"newCert\"  for=\"certTitle\">Certification</label>\n    <input *ngIf=\"newCert\"  id=\"certTitle\" name=\"certTitle\" type=\"text\" [(ngModel)]=\"certTitle\" />\n\n\n    <label for=\"certNote\">Description</label>\n\n    <quill-editor class=\"richText\" [(ngModel)]=\"certNote\" [modules]=\"{ toolbar: false }\">\n    </quill-editor>\n\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <div class=\"flushRight\"></div>\n\n<!-- \n      <button class=\"button-3d\" (click)=\"onCancelCert()\">Cancel</button>\n      <button *ngIf=\"!showCertTitle\" class=\"button-3d\" (click)=\"onDelCert('dlgCert')\">Remove</button>\n      <button class=\"button-3d\" (click)=\"onSaveCert()\">Save</button>\n -->\n <br>\n <hr>\n\n      <button *ngIf=\"!newCert\"  class=\"button-3d\" (click)=\"onNewCert('cvSalon')\">New</button>\n      <button *ngIf=\"!newCert\"  class=\"button-3d\" (click)=\"onDelCert('cvSalon')\">Delete</button>\n      <button class=\"button-3d\" (click)=\"onExitCert('cvSalon')\">Exit</button>\n      <button class=\"button-3d\" (click)=\"onSaveCert('cvSalon')\">Save</button> \n\n    </div>\n  </div>\n\n\n\n\n</dialog>\n\n<dialog id=\"dlgCertOptimusMinds\">\n\n  <div fxFlex fxLayout=\"column\">\n\n\n    <label *ngIf=\"!newCert\" class=\"labelData\" for=\"cert\">Select Certification</label>\n    <select *ngIf=\"!newCert\" class=\"inputData\" id=\"cert\" name=\"cert\" (change)=\"onSelCert('optimusMinds', $event.target.value)\" [(ngModel)]=\"cert\">\n      <option [value]=\"cert\" *ngFor=\"let cert of cboCerts\">\n        {{ cert }}\n      </option>\n    </select>\n  \n    \n    <label *ngIf=\"newCert\" for=\"certTitle\">Certification</label>\n    <input *ngIf=\"newCert\" id=\"certTitle\" name=\"certTitle\" type=\"text\" [(ngModel)]=\"certTitle\" />\n\n    <label class=\"labelData\" for=\"cert\">Select Program</label>\n    <select class=\"inputData\" id=\"program\" name=\"program\" (change)=\"onSelProgram($event.target.value)\" [(ngModel)]=\"program\">\n      <option [value]=\"program\" *ngFor=\"let program of programs\">\n        {{ program }}\n      </option>\n    </select>\n\n    <br>\n\n    <div *ngIf=\"attachCert\" style=\"border: thin solid black;\" fxLayoutAlign=\"center center\">\n      <span> <i class=\"material-icons\" style=\"vertical-align: -6px;\">attachment</i> {{attachCert}}    </span>\n     </div>\n \n\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n      <button type=\"button\" (click)=\"certFile.click()\">\n        <span>Attach Certificate</span>\n        <input #certFile type=\"file\" (change)=\"onAttach($event,'cert')\" style=\"display:none;\" />\n      </button>\n\n    </div>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <div class=\"flushRight\"></div>\n\n      <button *ngIf=\"!newCert\" class=\"button-3d\" (click)=\"onNewCert('optimusMinds')\">New</button>\n      <button *ngIf=\"!newCert\" class=\"button-3d\" (click)=\"onDelCert('optimusMinds')\">Delete</button>\n      <button class=\"button-3d\" (click)=\"onExitCert('optimusMinds')\">Exit</button>\n      <button class=\"button-3d\" (click)=\"onSaveCert('optimusMinds')\">Save</button> \n\n    </div>\n  </div>\n\n\n\n\n</dialog>\n\n\n<dialog id=\"dlgMoe\">\n\n  <div fxFlex fxLayout=\"column\">\n\n    <label for=\"moeExpiry\">MOE License Expiry Date</label>\n    <input id=\"moeExpiry\" name=\"moeExpiry\" type=\"date\" [(ngModel)]=\"moeExpiry\" />\n\n    <p class=\"header\">Qualified to train programs in : </p>\n\n\n\n    <div class=\"chkBoxes\">\n\n\n      <input class=\"leftA\" id=\"ai\" name=\"ai\" type=\"checkbox\" [(ngModel)]=\"aiChk\" />\n      <label class=\"rightA\" for=\"ai\">Artificial Intelligence</label>\n\n      <input class=\"leftA\" id=\"atRisk\" name=\"atRisk\" type=\"checkbox\" [(ngModel)]=\"atRiskChk\" />\n      <label class=\"rightA\" for=\"atRisk\">At Risk</label>\n\n      <input class=\"leftA\" id=\"career\" name=\"career\" type=\"checkbox\" [(ngModel)]=\"careerChk\" />\n      <label class=\"rightA\" for=\"career\">Career Perparation</label>\n\n      <input class=\"leftA\" id=\"dance\" name=\"dance\" type=\"checkbox\" [(ngModel)]=\"danceChk\" />\n      <label class=\"rightA\" for=\"dance\">Dance</label>\n\n      <input class=\"leftA\" id=\"drama\" name=\"drama\" type=\"checkbox\" [(ngModel)]=\"dramaChk\" />\n      <label class=\"rightA\" for=\"drama\">Drama</label>\n\n      <input class=\"leftA\" id=\"it\" name=\"it\" type=\"checkbox\" [(ngModel)]=\"itChk\" />\n      <label class=\"rightA\" for=\"it\">IT\\Multimedia</label>\n\n      <input class=\"leftA\" id=\"skills\" name=\"skills\" type=\"checkbox\" [(ngModel)]=\"skillsChk\" />\n      <label class=\"rightA\" for=\"skills\">Life Skills\\Soft Skills</label>\n\n      <input class=\"leftB\" id=\"tongue\" name=\"tongue\" type=\"checkbox\" [(ngModel)]=\"tongueChk\" />\n      <label class=\"rightB\" for=\"tongue\">Mother Tongue</label>\n\n      <input class=\"leftB\" id=\"music\" name=\"music\" type=\"checkbox\" [(ngModel)]=\"musicChk\" />\n      <label class=\"rightB\" for=\"music\">Music</label>\n\n      <input class=\"leftB\" id=\"outdoor\" name=\"outdoor\" type=\"checkbox\" [(ngModel)]=\"outdoorChk\" />\n      <label class=\"rightB\" for=\"outdoor\">Outdoor Education</label>\n\n\n      <input class=\"leftB\" id=\"sports\" name=\"sports\" type=\"checkbox\" [(ngModel)]=\"sportsChk\" />\n      <label class=\"rightB\" for=\"sports\">Sports</label>\n\n      <input class=\"leftB\" id=\"visual\" name=\"visual\" type=\"checkbox\" [(ngModel)]=\"visualChk\" />\n      <label class=\"rightB\" for=\"visual\">Visual Arts</label>\n\n\n\n\n    </div>\n\n\n\n    <div style=\"border: thin solid black;\" fxLayoutAlign=\"center center\">\n      <span> <i class=\"material-icons\" style=\"vertical-align: -6px;\">attachment</i> {{moeFile}}    </span>\n     </div>\n \n\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n      <button type=\"button\" (click)=\"moeDoc.click()\">\n        <span>Add MOE License*</span>\n        <input #moeDoc type=\"file\" (change)=\"onAttach($event,'moe')\" style=\"display:none;\" />\n      </button>\n\n    </div>\n\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center end\">\n\n      <!--  <div class=\"flushRight\"></div> -->\n\n      <button class=\"button-3d\" (click)=\"onCancelMoe()\">Cancel</button>\n      <button class=\"button-3d\" (click)=\"onSaveMoe()\">Save</button>\n\n    </div>\n  </div>\n\n\n\n\n</dialog>","\nimport { Component, OnInit } from '@angular/core';\nimport { Global } from '../../lib/global' ;\nimport { HttpEventType, HttpErrorResponse } from '@angular/common/http';\nimport { of } from 'rxjs';  \nimport { catchError, map } from 'rxjs/operators';  \nimport { RestSvc } from  '../../lib/restSvc';\n\n\n@Component({\n  selector: 'app-cv-salon-viewer',\n templateUrl: './cv-salon-viewer.component.html',\n  //templateUrl: './temp.html',\n  styleUrls: ['./cv-salon-viewer.component.scss']\n//  styleUrls: ['./temp.scss'],\n})\nexport class CvSalonViewerComponent implements OnInit {\n\n  \n  public files: any[];\n  public resp = \"\" ;\n\n  isImageLoading = false ;\n  //photo: any ; \n  client = 'cvSalon' ;\n\n\n\n  constructor(private restSvc: RestSvc) {\n    this.files = [];\n  }\n\n  ngOnInit(): void {\n   // this.photo = Global.photo ;\n  }   \n\n  get clientName() {\n    return Global.clientName;\n  }\n \n  get programs() {\n    return Global.locData[\"programs\"];\n   \n  }\n\n  get name() {\n    return Global.locData[\"name\"];\n  }\n  \n  \n  get aboutMe() {\n    return Global.locData[\"aboutMe\"];\n    \n  }\n  \n    \n  \n    get dob() {\n      return Global.locData[\"dob\"];\n    }\n  \n  \n    get mobileNbr() {\n\n      return Global.locData[\"mobileNbr\"];\n      \n       \n  \n     \n  \n    }\n  \n    get address() {\n  \n      return  Global.locData[\"address\"];\n   } \n  \n  \n    \n   \n    get email() {\n      \n      return Global.locData[\"email\"];\n\n\n \n\n  }\n\n  get edus() {\n    return   Global.locData[\"edus\"] ;\n  }\n\n  get exps() {\n    return   Global.locData[\"exps\"] ;\n  }\n\n  get certs() {\n    return   Global.locData[\"certs\"] ;\n  }\n\n  get skills() {\n    return   Global.locData[\"skills\"] ;\n  }\n\n  get acheives() {\n    return   Global.locData[\"acheives\"] ;\n  }\n\n\n  get photo() {\n\n     return Global.photo ;\n  }\n  \n  programHasCert(paraProgram) {\n    \n   return (Global.locData[\"certs\"].findIndex(item => item.program == paraProgram) >= 0) ? true : false ;\n     \n  }\n}\n\n\n","<div class=\"mainContent\"   id=\"cvSalon\">\r\n\r\n\r\n    <div style=\"background-color: black;color:black\" class=\"cssLeftWysiwyg\" fxFlex=\"2 1 30%\" >\r\n  \r\n        <img [src]=\"photo\" alt=\"My Photo\">\r\n\r\n\r\n        <div class=\"cssName\">\r\n          {{name}}\r\n        </div>\r\n    \r\n        <hr />\r\n        \r\n        <div class=\"cssTitle\" *ngIf=\"aboutMe\">\r\n          ABOUT ME\r\n        </div>\r\n    \r\n        <div class=\"cssText\">\r\n          <div [innerHTML]=\"aboutMe\"></div>\r\n        </div>\r\n    \r\n        <div *ngIf=\"aboutMe\">\r\n          <hr />\r\n        </div>\r\n    \r\n    \r\n        <div class=\"cssTitle\" *ngIf=\"skills.length > 0\">\r\n          SKILLS:\r\n        </div>\r\n    \r\n        <div *ngFor=\"let skill of skills;\"  class=\"cssText\">\r\n          <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n    \r\n            {{skill.title}}\r\n    \r\n            <div class=\"cssText\" *ngIf=\"skill.rate == '1 Star'\">\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n    \r\n              <span style=\"color:gray;\">\r\n                <i class=\"material-icons smallIcon\">star</i>\r\n                <i class=\"material-icons smallIcon\">star</i>\r\n                <i class=\"material-icons smallIcon\">star</i>\r\n                <i class=\"material-icons smallIcon\">star</i>\r\n              </span>\r\n            </div>\r\n    \r\n    \r\n            <div class=\"cssText\" *ngIf=\"skill.rate == '2 Stars'\">\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n    \r\n              <span style=\"color:gray;\">\r\n                <i class=\"material-icons smallIcon\">star</i>\r\n                <i class=\"material-icons smallIcon\">star</i>\r\n                <i class=\"material-icons smallIcon\">star</i>\r\n              </span>\r\n    \r\n            </div>\r\n            <div class=\"cssText\" *ngIf=\"skill.rate == '3 Stars'\">\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <span style=\"color:gray;\">\r\n                <i class=\"material-icons smallIcon\">star</i>\r\n                <i class=\"material-icons smallIcon\">star</i>\r\n              </span>\r\n    \r\n            </div>\r\n            <div class=\"cssText\" *ngIf=\"skill.rate == '4 Stars'\">\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <span style=\"color:gray;\">\r\n    \r\n                <i class=\"material-icons smallIcon\">star</i>\r\n              </span>\r\n    \r\n            </div>\r\n            <div class=\"cssText\" *ngIf=\"skill.rate == '5 Stars'\">\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n    \r\n    \r\n            </div>\r\n    \r\n    \r\n    \r\n          </div>\r\n    \r\n    \r\n        </div>\r\n    \r\n        <div *ngIf=\"skills.length > 0\">\r\n          <hr />\r\n        </div>\r\n\r\n        <div class=\"cssTitle\" *ngIf=\"programs.length > 0\">\r\n          Qualified to train programs in\r\n        </div>\r\n    \r\n        <div *ngFor=\"let program of programs;\" class=\"cssText\">\r\n          <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n            {{program}}\r\n          </div>\r\n        </div>\r\n    \r\n    \r\n        <div *ngIf=\"programs.length > 0\">\r\n          <hr />\r\n        </div>\r\n    \r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    \r\n          <i class=\"material-icons\" *ngIf='mobileNbr'>phone</i> {{mobileNbr}}\r\n        </div>\r\n    \r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    \r\n          <i class=\"material-icons\" *ngIf='email'>email</i> {{email}}\r\n        </div>\r\n    \r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n          <i class=\"material-icons\" *ngIf='address'>home</i>\r\n        </div>\r\n    \r\n        <div fxLayout=\"columns\" fxLayoutAlign=\"center center\">\r\n          <div [innerHTML]=\"address\"></div>\r\n        </div>\r\n    \r\n      </div>\r\n\r\n      \r\n      \r\n\r\n      \r\n        <div style=\"background-color: white;color:black\" fxFlex=\"2 1 70%\" fxLayout=\"column\">\r\n    \r\n            \r\n    <!-- Education -->\r\n    <div class=\"cssTitleRight\" *ngIf=\"edus.length > 0\">\r\n        EDUCATION:\r\n      </div>\r\n      <ul>\r\n        <div *ngFor=\"let edu of edus;\">\r\n          <li>{{edu.title}} </li>\r\n  \r\n  \r\n          <div [innerHTML]=\"edu.note\"></div>\r\n  \r\n          <br>\r\n        </div>\r\n      </ul>\r\n  \r\n      <!-- Experience -->\r\n      <div class=\"cssTitleRight\" *ngIf=\"exps.length > 0\">\r\n        EXPERIENCE:\r\n      </div>\r\n      <ul>\r\n        <div *ngFor=\"let exp of exps;\">\r\n          <li>{{exp.title}} </li>\r\n  \r\n  \r\n          <div [innerHTML]=\"exp.note\"></div>\r\n  \r\n          <br>\r\n        </div>\r\n      </ul>\r\n  \r\n  \r\n      <!-- Skills -->\r\n  \r\n  \r\n      <!-- Certs -->\r\n      <div class=\"cssTitleRight\" *ngIf=\"certs.length > 0\">\r\n        CERTIFICATIONS:\r\n      </div>\r\n  \r\n      <div *ngIf=\"clientName=='cvSalon'\">\r\n        <ul>\r\n          <div *ngFor=\"let cert of certs;\">\r\n  \r\n            <li>{{cert.title}} </li>\r\n  \r\n  \r\n            <div [innerHTML]=\"cert.note\"></div>\r\n  \r\n            <br>\r\n          </div>\r\n        </ul>\r\n      </div>\r\n  \r\n    \r\n      <div *ngIf=\"clientName=='optimusMinds'\">\r\n        <ul>\r\n  \r\n          <div *ngFor=\"let program of programs;\">\r\n  \r\n              <div class=\"cssLabel\" *ngIf=\"programHasCert(program)\" >\r\n                 {{ program }} \r\n              </div>\r\n            <ul>\r\n            <div *ngFor=\"let cert of certs;\">\r\n              <div *ngIf=\"cert.program == program\">\r\n                <li>{{cert.title}} </li>\r\n              </div>\r\n            </div>\r\n          </ul>\r\n  \r\n            <br>\r\n          </div>\r\n        </ul>\r\n      </div>\r\n  \r\n  \r\n      <!-- Certs -->\r\n      <div class=\"cssTitleRight\" *ngIf=\"acheives.length > 0\">\r\n        ACHIEVEMENTS :\r\n      </div>\r\n      <ul>\r\n        <div *ngFor=\"let acheive of acheives;\">\r\n          <li>{{acheive.title}} </li>\r\n  \r\n  \r\n          <div [innerHTML]=\"acheive.note\"></div>\r\n  \r\n          <br>\r\n        </div>\r\n      </ul>\r\n  \r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n \r\n ","import { Component, OnInit } from '@angular/core';\nimport { Global } from '../lib/global' ;\n\n@Component({\n  selector: 'app-cv-salon-site',\n  template:  `<div class=\"flex-container\">\n  <div fxLayout=\"row wrap\">\n    <div  fxFlex=\"100%\" fxFlex.gt-sm=\"50%\" >\n           <app-cv-salon-composer></app-cv-salon-composer> \n    </div>\n    <div  fxFlex=\"100%\" fxFlex.gt-sm=\"50%\">\n          <app-cv-salon-viewer></app-cv-salon-viewer> \n    </div> \n    </div> \n   \n  </div>`\n})\nexport class CvSalon implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n}\n\n/* \nget clientName() {\n  return Global.clientName;\n}\n\nget programs() {\n  return Global.locData[\"programs\"];\n \n}\n\nget name() {\n  return Global.locData[\"name\"];\n}\n\n\nget aboutMe() {\n  return Global.locData[\"aboutMe\"];\n  \n}\n\n  \n  get dob() {\n    return Global.locData[\"dob\"];\n  }\n\n\n  get mobileNbr() {\n\n    return Global.locData[\"mobileNbr\"];\n    \n     \n\n   \n\n  }\n\n  get address() {\n\n    return  Global.locData[\"address\"];\n } \n\n\n  \n \n  get email() {\n    \n    return Global.locData[\"email\"];\n\n\n\n\n}\n\nget edus() {\n  return   Global.locData[\"edus\"] ;\n}\n\nget exps() {\n  return   Global.locData[\"exps\"] ;\n}\n\nget certs() {\n  return   Global.locData[\"certs\"] ;\n}\n\nget skills() {\n  return   Global.locData[\"skills\"] ;\n}\n\nget acheives() {\n  return   Global.locData[\"acheives\"] ;\n}\n\n\nget photo() {\n\n   return Global.photo ;\n}\n\nprogramHasCert(paraProgram) {\n  \n return (Global.locData[\"certs\"].findIndex(item => item.program == paraProgram) >= 0) ? true : false ;\n   \n}\n\n}\n */\n\n/* <div class=\"flex-container\">\n<div fxLayout=\"row\">\n  <div  fxFlex=\"100%\" fxFlex.gt-sm=\"50%\" >\n         <app-cv-salon-composer></app-cv-salon-composer> \n  </div>\n  <div  fxFlex=\"50%\" fxHide fxShow.gt-sm >\n  <app-cv-salon-viewer></app-cv-salon-viewer> \n  </div> \n  </div> \n  \n</div>\n` */","import { Component, OnInit } from '@angular/core';\nimport { Global } from '../lib/global';\n/* \nimport { ModalService } from '../lib/_modal'; \nimport { RestSvc } from  '../lib/restSvc';\nimport { FormBuilder, FormGroup, CheckboxRequiredValidator } from '@angular/forms';\nimport { HttpEventType, HttpErrorResponse } from '@angular/common/http';\nimport { of } from 'rxjs';  \nimport { catchError, map } from 'rxjs/operators';  \nimport * as jspdf from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport { stringify } from 'querystring';\n */\nimport {CtrlSvc} from '../lib/ctrlSvc' ;\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n \n  \n  constructor(private ctrlSvc: CtrlSvc) { }\n\n  ngOnInit(): void {\n  }\n\n public onSubmit()\n{\n  this.ctrlSvc.onSubmit() ;\n}\n\n public onQry()\n{\n  this.ctrlSvc.onQry() ;\n}\n\npublic onPdf()\n{\n  this.ctrlSvc.onPdf() ;\n}\n\nget domainName() {\n  return Global.domainName ;\n}\n\nget logo() {\n   return Global.logo ;\n}\n\n}","<div class=\"container\">\n<header>\n  \n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" >\n        <!-- GAP -->\n      <div fxFlex=\"1\" ></div> \n    \n\n        <img [src]=\"logo\" alt=\"logo\" >\n        {{domainName}}\n\n       \n    \n    </div>    \n            \n      \n</header>\n\n</div>\n\n<!-- <jw-modal id=\"dlgErrOld\" class=\"dlg\">\n\n    <div fxFlex fxLayout=\"column\" class=\"dialog1\">\n \n        <h1>Errors</h1>\n        \n       <ol>\n           <div *ngFor=\"let err of errList;\"> \n                    <li>     {{err}}    </li>\n           </div>\n       </ol>\n    \n    \n    \n    <div  fxLayout=\"row\" fxLayoutAlign=\"end center\" class=\"btn\" >\n       \n        <button  (click)=\"onErrClose();\">Ok</button>\n    </div>\n        </div>\n  \n</jw-modal> \n -->\n<!-- <jw-modal id=\"dlgSubmitOld\" class=\"dlg\">\n\n\n    <div fxFlex fxLayout=\"column\" class=\"dialog1\">\n \n    <h1>Submit</h1>\n  \n  \n  <div  fxLayout=\"row\" fxLayoutAlign=\"start start\" >\n  <input  id=\"declare\" name=\"ai\" type=\"checkbox\"  [(ngModel)] = \"declareChk\" />\n   <label  for=\"declare\">I declare the infomation provided by me to be true.</label>\n</div>\n<div  fxLayout=\"row\">\n   <input  id=\"share\" name=\"share\" type=\"checkbox\" [(ngModel)] = \"shareChk\" />\n   <label  for=\"share\">I allow for my information to be shared with prospective client\\s.</label>\n</div>     \n\n<br>\n\n\n\n<div class=\"checkboxes\">\n    <label class=\"lbl\" for=\"x\"><input type=\"checkbox\" id=\"declare\" [(ngModel)] = \"declareChk\" /> <span>I declare the infomation provided by me to be true.</span></label>\n    <br>\n    <label class=\"lbl\" for=\"y\"><input type=\"checkbox\" id=\"y\"  [(ngModel)] = \"shareChk\" /> <span>I allow for my information to be shared with prospective client\\s</span></label>\n\n  </div>\n  <br>\n\n  <div *ngIf=\"docs.length > 0\" class='docs'>  Documents to be uploaded : </div>\n   <ol>\n       <div *ngFor=\"let doc of docs;\"> \n                <li>     {{doc.docTable}} :  {{doc.docName}}     </li>\n       </div>\n   </ol>\n\n<div  fxLayout=\"row\" fxLayoutAlign=\"end center\" class=\"btn\" >\n    <button  (click)=\"cancelSubmit();\">Cancel</button>\n    <button  [disabled]=\"disableSubmit()\" (click)=\"okSubmit();\">Ok</button>\n</div>\n    </div>\n  \n </jw-modal> \n -->\n\n<!-- \n<jw-modal id=\"dlgAuthOld\" class=\"dlg\"> \n\n\n    <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"dialog\">\n \n    <div *ngIf=\"dlgAuthMode===1\">\n    \n    <h1>LogIn via Email</h1>\n     <p>\n        Please provide an email address to receive an authorisation pin for access.   \n     </p>\n\n\n     <div fxLayout=\"row\" >\n        <div fxLayout=\"column\" >\n      <label for=\"email\">Email</label>\n      <input  id=\"email\" name=\"email\" type=\"text\" [(ngModel)] = \"email\" />\n\n    </div>\n</div>\n    <div  fxLayout=\"row\" fxLayoutAlign=\"end center\" class=\"btn\" >\n        <button  (click)=\"onAuthEmail();\">Ok</button>\n    </div> \n    <label for=\"email\">Email Address</label>\n     <input id=\"email\" name=\"email\" type=\"text\" [(ngModel)] = \"email\">\n\n            <div  fxLayout=\"row\" fxLayoutAlign=\"end center\" class=\"btn\" >\n                    <button  (click)=\"onAuthEmail();\">Ok</button>\n            </div> -->\n\n<!--      \n</div>\n     <div *ngIf=\"dlgAuthMode===2\">\n\n        <h1>Provide PIN</h1>\n        <p>\n            An authorisation PIN code has been sent to {{email}}. \n            \n         </p>\n\n\n\n        <div fxLayout=\"row\" >\n            <div fxLayout=\"column\" >\n          <label for=\"email\">Enter PIN Code</label>\n          <input id=\"pin\" name=\"pin\" type=\"text\" [(ngModel)] = \"pin\">\n\n    \n        </div>\n    </div>\n\n        <div  fxLayout=\"row\" fxLayoutAlign=\"end center\" class=\"btn\" >\n            <button  (click)=\"onAuthClose();\">Ok</button>\n        </div>\n    </div>\n\n\n</div>\n </jw-modal> -->   \n","import { Injectable } from '@angular/core';\r\nimport { Global } from './global';\r\nimport { DialogService } from './dialog';\r\nimport { RestSvc } from './restSvc';\r\nimport * as jspdf from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport { stringToKeyValue } from '@angular/flex-layout/extended/typings/style/style-transforms';\r\nimport { stringify } from 'querystring';\r\n\r\nimport { of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport * as FileSaver from 'file-saver';\r\nimport { HttpClient, HttpEvent, HttpErrorResponse, HttpEventType, HttpHeaders } from '@angular/common/http';\r\nimport * as JSZip from 'jszip';  \r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CtrlSvc {\r\n\r\n  errList = [];\r\n  docs = [];\r\n\r\n  constructor(private restSvc: RestSvc, private dlgSvc: DialogService,private httpClient: HttpClient) { }\r\n\r\n\r\n  onSubmit() {\r\n\r\n\r\n\r\n    this.errList = [];\r\n    let aryKeys = Object.keys(Global.locData);\r\n\r\n\r\n\r\n    for (let idx = 0; idx < aryKeys.length; idx++) {\r\n\r\n\r\n      switch (aryKeys[idx]) {\r\n        /* case 'moeExpiry':\r\n          if (Global.locData[aryKeys[idx]] === '') {\r\n            this.errList.push('MOE Expiry date cannot be empty');\r\n          }\r\n          break; */\r\n        case 'name':\r\n          if (Global.locData[aryKeys[idx]] === '') {\r\n            this.errList.push('Name cannot be empty');\r\n          }\r\n          break;\r\n        case 'email':\r\n          if (Global.locData[aryKeys[idx]] === '') {\r\n            this.errList.push('Email cannot be empty');\r\n          }\r\n          break\r\n        case 'dob':\r\n          if (Global.locData[aryKeys[idx]] === '') {\r\n            this.errList.push('Date of birth cannot be empty');\r\n          }\r\n          break\r\n        /* case 'idNbr':\r\n          if (Global.locData[aryKeys[idx]] === '') {\r\n            this.errList.push('Identity number cannot be empty');\r\n          }\r\n          break */\r\n        case 'mobileNbr':\r\n          if (Global.locData[aryKeys[idx]] === '') {\r\n            this.errList.push('Mobile number cannot be empty');\r\n          }\r\n          break\r\n\r\n      }\r\n    }\r\n\r\n    if (this.errList.length > 0) {\r\n\r\n      Global.errList = this.errList ;\r\n       \r\n      this.dlgSvc.open('dlgErr'); {\r\n        return;\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    this.docs = []\r\n\r\n    for (let i = 0; i < Global.docs.length; i++) {\r\n      var doc = { docTable: Global.docs[i]['docTable'], docName: Global.docs[i]['file'].name };\r\n      this.docs.push(doc);\r\n    }\r\n\r\n\r\n    this.dlgSvc.open('dlgSubmit');\r\n\r\n\r\n\r\n  }\r\n\r\n  onQry() {\r\n\r\n\r\n    Global.makeProgramList();\r\n\r\n    \r\n\r\n    this.restSvc.qryTrainer(Global.locData[\"programs\"]).then(\r\n      (rcvd) => {\r\n\r\n        let obj = {};\r\n        Global.trainersExist = false ;\r\n\r\n        obj[\"list\"] = rcvd;\r\n\r\n        Global.trainers = obj[\"list\"];\r\n\r\n        Global.trainersExist = true ;\r\n\r\n\r\n      },\r\n      (err) => {\r\n\r\n        Global.trainersExist = false ;\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  onPdf() {\r\n\r\n\r\nvar name = Global.name ;\r\nvar data = document.getElementById('cvSalon');\r\nhtml2canvas(data).then(canvas => {\r\n// Few necessary setting options\r\nvar imgWidth = 208;\r\nvar pageHeight = 295;\r\nvar imgHeight = canvas.height * imgWidth / canvas.width;\r\nvar heightLeft = imgHeight;\r\n \r\nconst contentDataURL = canvas.toDataURL('image/png')\r\nlet pdf = new jspdf('p', 'mm', 'a4'); // A4 size page of PDF\r\nvar position = 0;\r\n\r\npdf.addImage(contentDataURL, 'PNG', 0, position, imgWidth, imgHeight)\r\n\r\npdf.save(name); // Generated PDF\r\n\r\n\r\n\r\n// pdf.save(\"myfile.pdf\", {returnPromise:true}).then(alert('PDF render all done!'));\r\n\r\n// var blob = pdf.output('blob'\r\n\r\n\r\n}); \r\n\r\n  }\r\n\r\n\r\n  async onPdfBlob(zip) {\r\n\r\n\r\n    var name = Global.name ;\r\n    var data = document.getElementById('cvSalon');\r\n    html2canvas(data).then(canvas => {\r\n    // Few necessary setting options\r\n    var imgWidth = 208;\r\n    var pageHeight = 295;\r\n    var imgHeight = canvas.height * imgWidth / canvas.width;\r\n    var heightLeft = imgHeight;\r\n     \r\n    const contentDataURL = canvas.toDataURL('image/png')\r\n    let pdf = new jspdf('p', 'mm', 'a4'); // A4 size page of PDF\r\n    var position = 0;\r\n    \r\n    pdf.addImage(contentDataURL, 'PNG', 0, position, imgWidth, imgHeight)\r\n    \r\n     \r\n    // var blobData = pdf.output('blob') ;\r\n\r\n     //pdf.output(\"myfile.pdf\", {returnPromise:true}).then(alert('PDF render all done!'));\r\n    \r\n    // pdfBlob = new Blob([pdf.output('blob')], {type: 'application/pdf'}) ;\r\n\r\n     zip.file('cv.pdf',  new Blob([pdf.output('blob')], {type: 'application/pdf'}) ) ;\r\n    \r\n    }); \r\n    \r\n      }\r\n\r\n\r\n\r\n\r\nonZipPack() {\r\n    \r\n\r\n // alert(Global._id) ;\r\n // alert(Global.locData[\"name\"]) ;\r\n\r\n  this.createZip(Global.locData[\"name\"]) ;\r\n\r\n\r\n}\r\n\r\n  async getFile(doc) {  \r\n    const httpOptions = {  \r\n      responseType: 'blob' as 'json'  \r\n    };  \r\n\r\n  \r\n    let apiEp = `${this.restSvc.SERVER_URL}${Global.tableName}/downLoadFile/${Global._id}/folder/${doc[\"folder\"]}/file/${doc[\"file\"]}` ;\r\n\r\n\r\n    const res = await this.httpClient.get( apiEp , httpOptions).toPromise().catch((err: HttpErrorResponse) => {  \r\n      const error = err.error;  \r\n      return error;  \r\n    });  \r\n    return res;  \r\n  }  \r\n\r\n  async createZip(zipName: string) {  \r\n    const zip = new JSZip();  \r\n    const name = zipName + '.zip';  \r\n   // const pdfBlob: any\r\n   //\r\n    const pdfBlob: any = this.onPdfBlob(zip) ;\r\n    \r\n    \r\n    // tslint:disable-next-line:prefer-for-of  \r\n    for (let counter = 0; counter < Global.docs.length; counter++) {  \r\n      const doc  =  Global.docs[counter];  \r\n     \r\n    \r\n\r\n      \r\n    const fileData: any = await this.getFile(doc);  \r\n      const b: any = new Blob([fileData], { type: '' + fileData.type + '' });  \r\n      zip.file(doc['file'], b);  \r\n    }  \r\n    \r\n    zip.generateAsync({ type: 'blob' }).then((content) => {  \r\n       if (content) {  \r\n         FileSaver.saveAs(content, name);  \r\n       }  \r\n     });  \r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//onZipPack() {\r\n\r\n\r\n//   var data = document.getElementById('cvSalon');\r\n//   html2canvas(data).then(canvas => {\r\n//   // Few necessary setting options\r\n//   var imgWidth = 208;\r\n//   var pageHeight = 295;\r\n//   var imgHeight = canvas.height * imgWidth / canvas.width;\r\n//   var heightLeft = imgHeight;\r\n   \r\n//   const contentDataURL = canvas.toDataURL('image/png')\r\n//   let pdf = new jspdf('p', 'mm', 'a4'); // A4 size page of PDF\r\n//   var position = 0;\r\n  \r\n//   pdf.addImage(contentDataURL, 'PNG', 0, position, imgWidth, imgHeight)\r\n  \r\n//  pdf.save(name); // Generated PDF\r\n \r\n\r\n\r\n// var folder = 'cert' ; \r\n// var docs = []\r\n\r\n//  docs.push({fileName: 'mobileIndo.docx', folder: folder}) ;\r\n//  docs.push({fileName: 'hardeepSkill Matrix.docx', folder: folder}) ;\r\n//  docs.push({fileName: 'trainerPhoto.png', folder: folder}) ;\r\n\r\n// var fileName = `{Global._id}.zip` ; \r\n\r\n\r\n\r\n//   const formData = new FormData();\r\n\r\n//   formData.append('_id', Global._id);\r\n//   formData.append('name', Global.name + \".zip\");\r\n//   formData.append('docs', JSON.stringify(docs));\r\n\r\n // formData.append('docs', '[{\"fileName\":\"mobileIndo.docx\",\"folder\":\"cert\"},{\"fileName\":\"hardeepSkill Matrix.docx\",\"folder\":\"cert\"},{\"fileName\":\"trainerPhoto.png\",\"folder\":\"cert\"}]')\r\n   \r\n //this.createFormData(formData,'docs', docs)\r\n\r\n// formData.append('docs', docs)\r\n  //formData[\"docs\"] = docs ;\r\n\r\n\r\n\r\n//   this.restSvc.zipPack(formData, fileName).then(\r\n\r\n//     (data) => {\r\n\r\n//       alert(\"WAIT\") ;\r\n\r\n\r\n//       this.restSvc.getZipFile(Global._id,\"cv\", data[\"docFile\"]).then(\r\n\r\n//         (data) => {\r\n  \r\n  \r\n            \r\n  \r\n  \r\n//      });\r\n\r\n\r\n           \r\n      \r\n          \r\n//      // FileSaver.saveAs(data, fileName);\r\n\r\n\r\n\r\n//  });\r\n\r\n }\r\n\r\n\r\n\r\n","import { Component, ViewEncapsulation, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { DialogService } from './dialog.service';\r\n\r\n@Component({ \r\n    selector: 'dialog', \r\n    templateUrl: 'dialog.component.html', \r\n    styleUrls: ['dialog.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DialogComponent implements OnInit, OnDestroy {\r\n    @Input() id: string;\r\n    private element: any;\r\n\r\n    constructor(private dialogService: DialogService, private el: ElementRef) {\r\n        this.element = el.nativeElement;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // ensure id attribute exists\r\n        if (!this.id) {\r\n            console.error('dialog must have an id');\r\n            return;\r\n        }\r\n\r\n        // move element to bottom of page (just before </body>) so it can be displayed above everything else\r\n        document.body.appendChild(this.element);\r\n\r\n        // close modal on background click\r\n        this.element.addEventListener('click', el => {\r\n            if (el.target.className === 'dilaog') {\r\n                this.close();\r\n            }\r\n        });\r\n\r\n        // add self (this modal instance) to the modal service so it's accessible from controllers\r\n        this.dialogService.add(this);\r\n    }\r\n\r\n    // remove self from modal service when component is destroyed\r\n    ngOnDestroy(): void {\r\n        this.dialogService.remove(this.id);\r\n        this.element.remove();\r\n    }\r\n\r\n    // open modal\r\n    open(): void {\r\n        this.element.style.display = 'block';\r\n        document.body.classList.add('dialog');\r\n    }\r\n\r\n    // close modal\r\n    close(): void {\r\n        this.element.style.display = 'none';\r\n        document.body.classList.remove('dialog');\r\n    }\r\n}","<div class=\"dialog\" >\r\n    <div class=\"dialog-body\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>\r\n<div class=\"dialog-background\"></div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DialogComponent } from './dialog.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [DialogComponent],\r\n    exports: [DialogComponent]\r\n})\r\nexport class DialogModule { }","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DialogService {\r\n    private dialogs: any[] = [];\r\n\r\n    add(dialog: any) {\r\n        // add modal to array of active modals\r\n        this.dialogs.push(dialog);\r\n    }\r\n\r\n    remove(id: string) {\r\n        // remove modal from array of active modals\r\n        this.dialogs = this.dialogs.filter(x => x.id !== id);\r\n    }\r\n\r\n    open(id: string) {\r\n        // open modal specified by id\r\n        const dialog = this.dialogs.find(x => x.id === id);\r\n        dialog.open();\r\n    }\r\n\r\n    close(id: string) {\r\n        // close modal specified by id\r\n        const dialog = this.dialogs.find(x => x.id === id);\r\n        dialog.close();\r\n    }\r\n}","export * from './dialog.module';\r\nexport * from './dialog.service';","import { analyzeAndValidateNgModules } from '@angular/compiler';\r\n//import { Trainer} from '../lib/trainer' ;\r\n\r\nexport  class Global {\r\n \r\n  public static showTopBar = true ;\r\n  public static storyDone = false ;\r\n  public static clientName = \"\" ;\r\n  public static errList = [];\r\n  public static token = \"\" ;\r\n  public static pin = \"\";\r\n  public static photoList = [] ;\r\n  public static _id = \"\" ;\r\n  public static locData = {} ;\r\n  public static svrData = {} ;\r\n  public static dlgAuthMode = 0;\r\n  public static email = \"\" ;\r\n  public static adminLevel = 0;\r\n  public static adminLevelReq = 0;\r\n  public static domainName = '' ;\r\n  public static tableName = '' ;\r\n  public static  logo: any ;\r\n  public static mnu = -1;\r\n\r\n  public static lmsCards = {} ;\r\n  public static msgs = {} ;\r\n  public static lmsUserStories = {} ;\r\n  public static studyCards = [] ;\r\n  public static lmsMenuName = '';\r\n  // public static lmsUserStories = [\r\n  //   {\"nbr\": 1, \"role\": \"_______\" ,\"function\": \"_____________\", \"benefit\":\"__________________\"} ,\r\n  //   {\"nbr\": 2, \"role\": \"_______\" ,\"function\": \"_____________\", \"benefit\":\"__________________\"} ,\r\n  //   {\"nbr\": 3, \"role\": \"_______\" ,\"function\": \"_____________\", \"benefit\":\"__________________\"} \r\n  // ]\r\n  public static photo1: any;\r\n  public static photo2: any ;\r\n\r\n\r\n  public static trainersExist = false ;\r\n  \r\n  public static init(clientName) {\r\n\r\n    this.clientName = clientName ;\r\n    this.photo =  \"../../assets/imgs/myPhoto.png\" ;\r\n\r\n\r\n    this.photo1 = {} ;\r\n    this.photo2 = {} ;\r\n    this.locData = {} ;\r\n    this.svrData = {} ;\r\n    this.errList = [] ;  \r\n    this.photoList = [] ;\r\n\r\n    // this.locData[\"_id\"] = \"\" ;\r\n    this.locData[\"name\"] = \"\" ;\r\n\r\n    this.locData[\"email\"] = \"\" ;\r\n    this.locData[\"dob\"] = \"\" ;\r\n    this.locData[\"mobileNbr\"] = \"\" ;\r\n    this.locData[\"stage\"] =  -1;\r\n    this.locData[\"address\"] = \"\" ;\r\n    this.locData[\"aboutMe\"] = \"\" ;\r\n    this.locData[\"edus\"] = [];\r\n    this.locData[\"exps\"] = [];\r\n    this.locData[\"certs\"] = [];\r\n    this.locData[\"skills\"] = [];\r\n    this.locData[\"acheives\"] = [];\r\n    this.locData[\"programs\"] = [];\r\n\r\n  if (this.clientName == 'optimusMinds') {\r\n    this.clientName = clientName ;\r\n    this.logo =    \"../../assets/imgs/optimusMindsLogo.png\" ;\r\n  \r\n    this.domainName = 'Optimus Minds Pte Ltd'\r\n    this.tableName = \"trainers\" ;\r\n\r\n\r\n    this.locData[\"moeExpiry\"] = \"\" ;\r\n    this.locData[\"moeFile\"] = \"\" ;\r\n    this.locData[\"idNbr\"] = \"\" ;\r\n    this.locData[\"declareChk\"] = false ;\r\n    this.locData[\"shareChk\"] = false ;\r\n    this.locData[\"programs\"] = [];\r\n\r\n\r\n    \r\n  }\r\n  else if (this.clientName == 'lms') {\r\n\r\n    this.clientName = \"lms\" ;\r\n    this.logo =    \"../../assets/imgs/optimusMindsLogo.png\" ;\r\n    this.showTopBar = false ;\r\n    this.domainName =   \"Sysbit - LMS\" ;\r\n    this.tableName = \"lms\" \r\n    this.locData[\"userStories\"] =  [\r\n      {\"nbr\": 1, \"role\": \"\", \"function\": \"\", \"benefit\": \"\", \"points\": [] },\r\n      {\"nbr\": 2, \"role\": \"\", \"function\": \"\", \"benefit\": \"\",\"points\": [] },\r\n      {\"nbr\": 3, \"role\": \"\", \"function\": \"\", \"benefit\": \"\",\"points\": [] }\r\n  ]\r\n    \r\n\r\n  }\r\n  else {\r\n   \r\n    this.logo =    \"../../assets/imgs/cvSalonLogo.png\" \r\n    this.domainName = 'CV Salon ver 1.0'\r\n    this.tableName = \"applicants\" ;\r\n  }\r\n\r\n\r\n      // this.locData[\"_id\"] = \"\" ;\r\n      this.svrData[\"name\"] = \"\" ;\r\n\r\n      this.svrData[\"email\"] = \"\" ;\r\n      this.svrData[\"dob\"] = \"\" ;\r\n      this.svrData[\"mobileNbr\"] = \"\" ;\r\n      this.svrData[\"address\"] = \"\" ;\r\n      this.svrData[\"aboutMe\"] = \"\" ;\r\n      this.svrData[\"edus\"] = [];\r\n      this.svrData[\"exps\"] = [];\r\n      this.svrData[\"skills\"] = [];\r\n      this.svrData[\"acheives\"] = [];\r\n      this.svrData[\"stage\"] =  -1;\r\n  \r\n    if (this.clientName == 'optimusMinds') {\r\n      this.svrData[\"moeExpiry\"] = \"\" ;\r\n      this.svrData[\"idNbr\"] = \"\" ;\r\n      this.svrData[\"declareChk\"] = false ;\r\n      this.svrData[\"shareChk\"] = false ;\r\n        this.svrData[\"programs\"] = [];\r\n    }\r\n\r\n    if (this.clientName == 'lms') {\r\n      this.svrData[\"userStories\"] =  [] ;\r\n     \r\n    }\r\n  }\r\n\r\n\r\n    public static photo: any ;\r\n    public static trainerPhoto: any ;\r\n    public static photoFile: any;\r\n\r\n\r\n    // Optimus Minds\r\n    public static trainers = {} ;\r\n    public static docs = [] ;\r\n    public static achievementsAny = false ;\r\n    public static trainExpAiExpCnt = 0 ;\r\n    public static trainExpAtRiskCnt  = 0 ;\r\n    public static trainExpCarrerCnt  = 0 ;\r\n    public static trainExpDanceExpCnt =   0 ;\r\n    public static trainExpDramaExpCnt = 0 ;\r\n    public static trainExpItExpCnt = 0 ;\r\n    public static trainExpMusicExpCnt = 0 ;\r\n    public static trainExpTongueExpCnt = 0 ;\r\n    public static trainExpsSkillsExpCnt =0 ;\r\n    public static trainExpsOutdoorExpCnt = 0 ;\r\n    public static trainExpsVisualExpCnt = 0 ;\r\n    public static trainExpsSportsExpCnt = 0 ;\r\n    public static trainExpsOthersExpCnt = 0 ;\r\n \r\n    \r\n  public static aiChk: Boolean = false ;\r\n  public static atRiskChk: Boolean = false ;\r\n  public static careerChk: Boolean = false ;\r\n  public static dramaChk: Boolean = false ;\r\n  public static danceChk: Boolean = false ;\r\n  public static itChk : Boolean = false ;\r\n  public static skillsChk: Boolean = false ;\r\n  public static tongueChk: Boolean = false ;\r\n  public static musicChk: Boolean = false ;\r\n  public static outdoorChk: Boolean = false ;\r\n  public static sportsChk: Boolean = false ;\r\n  public static visualChk: Boolean = false ;\r\n  public static othersChk: Boolean = false ;\r\n\r\n  public static aiExpAny: Boolean = false ;\r\n  public static atRiskExpAny: Boolean = false ;\r\n  public static careerExpAny: Boolean = false ;\r\n  public static dramaExpAny: Boolean = false ;\r\n  public static danceExpAny: Boolean = false ;\r\n  public static itExpAny : Boolean = false ;\r\n  public static skillsExpAny: Boolean = false ;\r\n  public static tongueExpAny: Boolean = false ;\r\n  public static musicExpAny: Boolean = false ;\r\n  public static outdoorExpAny: Boolean = false ;\r\n  public static sportsExpAny: Boolean = false ;\r\n  public static visualExpAny: Boolean = false ;\r\n  public static othersExpAny: Boolean = false ;\r\n  \r\n  public static program: string  = \"+\";\r\n  public static cert: string  = \"+\";\r\n  public static from: string  = \"+\";\r\n  public static year: string  = \"+\";\r\n  public static file: string  = \"+\";\r\n \r\n    public static  trainCertPickId: number = 0 ;\r\n    public static trainCertId: number = 0 ;\r\n  \r\n    public static  dataMode: Boolean = false ;\r\n  \r\n    \r\n\r\n    \r\n  public static pad(num:number, size:number): string {\r\n    let s = num+\"\";\r\n    while (s.length < size) s = \"0\" + s;\r\n    return s;\r\n  }\r\n  \r\n  public static getMaxId(array) {\r\n    return Math.max.apply(Math, array.map(function(o) { return o.id; }))\r\n  \r\n  }\r\n\r\n  public static getMaxDocId(array) {\r\n    if (array.length === 0) return '00001' ;\r\n    let nbr = Math.max.apply(Math, array.map(function(o) { return o.docId; }))\r\n  \r\n    return this.pad(nbr + 1,5) ;\r\n   \r\n    \r\n    }\r\n\r\n  public static makeProgramList() {\r\n       \r\n    this.locData[\"programs\"] = [] ;\r\n   \r\n    if (this.aiChk)  this.locData[\"programs\"].push('AI') ;\r\n    if (this.atRiskChk )  this.locData[\"programs\"].push('At Risk') ;\r\n    if (this.careerChk )  this.locData[\"programs\"].push('Career Perparation') ;\r\n    if (this.danceChk )  this.locData[\"programs\"].push('Dance') ;\r\n    if (this.dramaChk )  this.locData[\"programs\"].push('Drama') ;\r\n    if (this.itChk )      this.locData[\"programs\"].push('IT\\\\Multimedia') ;\r\n    if (this.musicChk )  this.locData[\"programs\"].push('Music') ;\r\n    if (this.tongueChk )  this.locData[\"programs\"].push('Mother Tongue') ;\r\n    if (this.skillsChk )  this.locData[\"programs\"].push('Life Skills\\Soft Skills') ;\r\n    if (this.outdoorChk)    this.locData[\"programs\"].push('Outdoor Education') ;\r\n    if (this.visualChk)    this.locData[\"programs\"].push('Visual Arts') ;\r\n    if (this.sportsChk)    this.locData[\"programs\"].push('Sports') ;\r\n    if (this.othersChk)    this.locData[\"programs\"].push('Others') ;\r\n    \r\n    \r\n  \r\n\r\n\r\n  }\r\n  \r\n  \r\n  \r\n  public static trainer = () => { return {\r\n                                          trainerName: '',\r\n                                          trainerCode: '',\r\n                                       \r\n                                          idNbr: \"\",\r\n                                          email: \"\",\r\n                                          dob: \"\",\r\n                                          mobileNbr: \"\" ,\r\n                                          aboutMe: \"\" ,\r\n                                          declareChk: false,\r\n                                          shareChk: false,\r\n                                          edus: [],\r\n                                          exps: [],\r\n                                          programs: [],\r\n                                          trainCerts: [],\r\n                                          achievements: []\r\n                                          }\r\n                             } ;\r\n                \r\n                             \r\n\r\n public static calcAchievements() {\r\n      this.achievementsAny = this.locData[\"achievements\"].length === 0 ? false : true ;\r\n\r\n }\r\n\r\n public static trainExpAny = (program) => {\r\n            return Global.locData[\"trainExps\"].filter(function(element){\r\n              return element.program == program ;\r\n            }).length > 0 ? true : false ;\r\n            \r\n  \r\n          }                     \r\n                      \r\n     public static trainExpsExpAny = () => {   \r\n        Global.aiExpAny = Global.trainExpAny('AI') ;\r\n        Global.atRiskExpAny = Global.trainExpAny('At Risk') ;\r\n        Global.careerExpAny= Global.trainExpAny('Career Perparation') ;\r\n        Global.danceExpAny = Global.trainExpAny('Dance') ;\r\n        Global.dramaExpAny = Global.trainExpAny('Drama') ;\r\n        Global.itExpAny = Global.trainExpAny('IT\\\\Multimedia') ;\r\n        Global.musicExpAny = Global.trainExpAny('Music') ;\r\n        Global.tongueExpAny = Global.trainExpAny('Mother Tongue') ;\r\n        Global.skillsExpAny = Global.trainExpAny('Life Skills\\Soft Skills') ;\r\n        Global.outdoorExpAny = Global.trainExpAny('Outdoor Education') ;\r\n        Global.visualExpAny = Global.trainExpAny('Visual Arts') ;\r\n        Global.sportsExpAny = Global.trainExpAny('Sports') ;\r\n        Global.othersExpAny = Global.trainExpAny('Others') ;\r\n    \r\n    \r\n\r\n   }\r\n\r\n\r\n \r\n             \r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Global } from '../lib/global' ;\r\n@Injectable()\r\nexport class HeaderInjector implements HttpInterceptor {\r\n    constructor() { }\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        \r\n\r\n      /*   request = request.clone({\r\n            setHeaders: {\r\n              Authorization: `Bearer ${Global.authKey}`\r\n            }\r\n          }) */; \r\n\r\n          \r\n          request = request.clone({ headers: request.headers.set('Authorization', 'Bearer ' + `${Global.token}`) });\r\n          \r\n       //   request = request.clone({ headers: request.headers.set('Content-Type', 'application/json') });\r\n\r\n      //    request = request.clone({ headers: request.headers.set('Accept', 'application/json') });\r\n          \r\n      //    alert(JSON.stringify(request.headers)) ;\r\n\r\n         /*  request = request.clone({ headers: request.headers.set('Authorization', 'Bearer ' + `${Global.authKey}`) });\r\n\r\n          request = request.clone({ headers: request.headers.set('Content-Type', 'application/json') });\r\n          \r\n          request = request.clone({ headers: request.headers.set('Accept', 'application/json') });\r\n */\r\n        /* request = request.clone({\r\n            setHeaders: {\r\n                Authorization: 'Global.authKey',\r\n                Name: 'hardeep' \r\n            } \r\n         */\r\n        \r\n     //   });\r\n\r\n        \r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { Global } from '../lib/global' ;\n@Pipe({\n  name: 'programfilter'\n})\nexport class ProgramfilterPipe implements PipeTransform {\n\n  // transform(value: unknown, ...args: unknown[]): unknown {\n  //   return null;\n  // }\n\n  transform(docs: any[], filter: any): any {\n    if (!docs || !filter) {\n        return docs;\n    }\n    // filter items array, items which match and return true will be\n    // kept, false will be filtered out\n   // return docs.filter(doc => doc.program.indexOf(filter) !== -1);\n    return docs.filter(doc => filter.indexOf(doc.program) > -1 || doc.program == 'moe');\n   // programs.indexOf(doc.program) > -1\n}\n\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { HttpClient, HttpEvent, HttpErrorResponse, HttpEventType, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n//import { Observable } from 'rxjs';\nimport { Global } from './global';\nimport { BehaviorSubject} from 'rxjs';\nimport { StringMapWithRename } from '@angular/compiler/src/compiler_facade_interface';\nimport * as FileSaver from 'file-saver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestSvc {\n\n  //SERVER_URL: string = \"http://localhost:3000/\"\n   SERVER_URL: string = \"https://cvSalon.com:3000/\" \n // SERVER_URL: string = \"http://cvSalon.com:3000/\" \n  private btnAction = new BehaviorSubject('');\n  watchBtnAction = this.btnAction.asObservable();\n\n  // Emiiter to triggger functions in wysiswyg.ts\n/*   invokeChgPhoto = new EventEmitter();\n  subsVar: Subscription; */\n\n  action = \"\";\n  \n\n  constructor(private httpClient: HttpClient) {\n  }\n\n\n  onBtnAction(action) {\n    this.btnAction.next(action)\n\n  }\n\n  // Trigger emiiter \n/*   onChgPhoto() {\n    this.invokeChgPhoto.emit();\n  }\n */\n  // Called by main.ts on load of page to refresh photo\n  public getFile(_id: string, folder: string, file: string) {\n \n    let apiEp = `${this.SERVER_URL}${Global.tableName}/downLoadFile/${_id}/folder/${folder}/file/${file}` ;\n\n \n    alert(apiEp) ;\n    \n    const promise = new Promise((resolve, reject) => {\n      //const apiURL = apiEp + \"/\" + _id;\n\n      this.httpClient.get(apiEp, { responseType: 'blob' }).toPromise()\n        .then((res: any) => {\n          // Success\n                   \n          \n          let blob = new Blob(res.data);\n         \n          FileSaver.saveAs(blob, file);\n\n\n          resolve();\n\n        },\n          err => {\n\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n\n\n  }\n\n  // public getDoc(httpOptions, _id: string, folder: string, file: string) {\n \n  //   let apiEp = `${this.SERVER_URL}${Global.tableName}/downLoadFile/${_id}/folder/${folder}/file/${file}` ;\n\n\n  //   const res = await this.httpClient.get(apiEp , httpOptions).toPromise().catch((err: HttpErrorResponse) => {  \n  //     const error = err.error;  \n  //     return error;  \n  //   });  \n    \n  //   return res;  \n\n    \n \n    // alert(apiEp) ;\n    \n    // const promise = new Promise((resolve, reject) => {\n    //   //const apiURL = apiEp + \"/\" + _id;\n\n    //   this.httpClient.get(apiEp,{responseType: 'arraybuffer'}).toPromise()\n    //     .then((res: any) => {\n    //       // Success\n                   \n          \n    //       let blob = new Blob(res.data);\n         \n    //       FileSaver.saveAs(blob, file);\n\n\n    //       resolve();\n\n    //     },\n    //       err => {\n\n    //         reject(err);\n    //       }\n    //     );\n    // });\n\n    // return promise;\n\n\n // }\n public getTrainerPhoto(_id: string) {\n   \n  let apiEp = this.SERVER_URL +  Global.tableName + \"/downLoadPhoto/\" + _id;\n\n  const promise = new Promise((resolve, reject) => {\n    //const apiURL = apiEp + \"/\" + _id;\n\n    this.httpClient.get(apiEp, { responseType: 'blob' }).toPromise()\n      .then((res: any) => {\n        // Success\n        this.makeTrainerImg(res);\n        resolve();\n\n      },\n        err => {\n\n          reject(err);\n        }\n      );\n  });\n\n  return promise;\n\n\n}\n\nmakeTrainerImg(image) {\n  let reader = new FileReader();\n  reader.addEventListener(\"load\", (data) => {\n\n    Global.trainerPhoto = reader.result;\n\n\n    // Trigger function in wysiwyg\n    //this.onChgPhoto();\n\n  }, false);\n\n  if (image) {\n    reader.readAsDataURL(image);\n  }\n}\n\n\n public getClassPhoto(_id: string) {\n   \n  let apiEp = this.SERVER_URL +  Global.tableName + \"/downLoadPhoto/\" + _id;\n\n  const promise = new Promise((resolve, reject) => {\n    //const apiURL = apiEp + \"/\" + _id;\n\n    this.httpClient.get(apiEp, { responseType: 'blob' }).toPromise()\n      .then((res: any) => {\n        // Success\n        this.makeImg(res, _id);\n       \n        resolve();\n\n      },\n        err => {\n\n          reject(err);\n        }\n      );\n  });\n\n  return promise;\n\n\n}\n\nmakeImg(image, _id) {\n  let reader = new FileReader();\n  reader.addEventListener(\"load\", (data) => {\n\n\n\n    Global.photoList.push({\"_id\": _id, \"img\": reader.result});\n\n    // Trigger function in wysiwyg\n    //this.onChgPhoto();\n\n  }, false);\n\n  if (image) {\n    reader.readAsDataURL(image);\n  }\n}\n\n  public getPhoto(_id: string) {\n\n   \n    let apiEp = this.SERVER_URL +  Global.tableName + \"/downLoadPhoto/\" + _id;\n\n\n\n    const promise = new Promise((resolve, reject) => {\n      //const apiURL = apiEp + \"/\" + _id;\n\n      this.httpClient.get(apiEp, { responseType: 'blob' }).toPromise()\n        .then((res: any) => {\n          // Success\n          this.makeImgFromBlob(res);\n          resolve();\n\n        },\n          err => {\n\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n\n\n  }\n\n  // Convert Blob to Image\n  makeImgFromBlob(image) {\n    let reader = new FileReader();\n    reader.addEventListener(\"load\", (data) => {\n\n      Global.photo = reader.result;\n\n      // Trigger function in wysiwyg\n      //this.onChgPhoto();\n\n    }, false);\n\n    if (image) {\n      reader.readAsDataURL(image);\n    }\n  }\n\n  // Upload Photo\n  /*   public upLoadPhoto(formData) {\n      let uri =  this.SERVER_URL + 'upLoadPhoto'\n  \n    \n      return this.httpClient.post<any>(uri, formData, {  \n          reportProgress: true,  \n          observe: 'events'  \n        });  \n    }\n   */\n  public upLoadDoc(formData, docType) {\n\n    let uri =  this.SERVER_URL + Global.tableName;\n\n   \n\n    if (docType === 'photo') {\n      uri += '/upLoadPhoto' ;\n    }\n    else {\n      uri += '/upLoadDoc' ;\n    }\n\n\n\n\n    return this.httpClient.post<any>(uri, formData, {\n      reportProgress: true,\n      observe: 'events'\n    });\n  }\n\n\n  public zipPack(formData, fileName: string) {\n\n\n    let apiEp = `${this.SERVER_URL}${Global.tableName}/zipper` ;\n\n    \n   \n     \n     const promise = new Promise((resolve, reject) => {\n       //const apiURL = apiEp + \"/\" + _id;\n \n       this.httpClient.post(apiEp, formData).toPromise()\n         .then((res: any) => {\n           // Success\n                    \n           \n          \n \n \n           resolve(res);\n \n         },\n           err => {\n \n             reject(err);\n           }\n         );\n     });\n \n     return promise;\n\n    // let uri =  this.SERVER_URL + Global.tableName;\n\n    // uri += '/zipper' ;\n\n    // return this.httpClient.post<any>(uri, formData, {\n    //   reportProgress: true,\n    //   observe: 'events'\n    // });\n  }\n\n  public create( objData: any) {\n\n    let apiEp = this.SERVER_URL + Global.tableName ;\n\n   \n\n    const promise = new Promise((resolve, reject) => {\n      \n      \n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n      \n      this.httpClient.post(apiEp, objData, { headers: headers }).toPromise()\n        .then((res: any) => {\n\n\n\n\n          resolve(res);\n\n\n        },\n          err => {\n\n\n\n\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n  }\n\n\n   public qryTrainer(filter) {\n\n    //     var saveTrainerApi = \"http://localhost:3000/trainers/update/\" +  _id;\n    var qryTrainerApi = this.SERVER_URL + \"trainers/query\";\n\n\n    const promise = new Promise((resolve, reject) => {\n      const apiURL = qryTrainerApi;\n\n  \n\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n      this.httpClient.post(apiURL, filter, { headers: headers }).toPromise()\n        .then((res: any) => {\n\n        \n          \n\n          resolve(res);\n\n\n        },\n          err => {\n\n\n\n\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n  }\n \n  public addPoint( objData: any, _id: string) {\n\n    \n    let apiEp = this.SERVER_URL + Global.tableName + \"/addPoint/\" + _id;\n\n    \n    const promise = new Promise((resolve, reject) => {\n    \n\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n\n      this.httpClient.put(apiEp, objData, { headers: headers }).toPromise()\n        .then((res: any) => {\n\n\n\n\n          resolve(res);\n\n\n        },\n          err => {\n\n\n\n\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n  }\n\n\n public update( objData: any, _id: string) {\n\n    //     var saveTrainerApi = \"http://localhost:3000/trainers/update/\" +  _id;\n\n    let apiEp = this.SERVER_URL + Global.tableName + \"/\" + _id;\n\n\n    const promise = new Promise((resolve, reject) => {\n    \n\n\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n\n      this.httpClient.put(apiEp, objData, { headers: headers }).toPromise()\n        .then((res: any) => {\n\n\n\n\n          resolve(res);\n\n\n        },\n          err => {\n\n\n\n\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n  }\n\n  public getByEmail(email: string) {\n\n\n    let apiEp = this.SERVER_URL + Global.tableName+ \"/getRec/\" + email;\n\n\n\n    const promise = new Promise((resolve, reject) => {\n      // const apiURL = getTrainerApi + \"/\" + _id;\n\n\n      this.httpClient.get(apiEp).toPromise()\n        .then((res: any) => {\n         \n\n\n          resolve(res);\n\n        },\n          err => {\n\n            alert('err') ; \n\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n  }\n\n  public getById(_id: string) {\n\n\n    let apiEp = this.SERVER_URL + Global.tableName + \"/\" +_id;\n\n     \n\n\n\n    const promise = new Promise((resolve, reject) => {\n    \n\n\n      this.httpClient.get(apiEp).toPromise()\n        .then((res: any) => {\n         \n\n\n          resolve(res);\n\n        },\n          err => {\n\n            alert('err') ; \n\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n  }\n\n\n /*  public sendToken(_id: string) {\n\n    const getTrainerApi = \"http://localhost:3000/trainers\"\n\n    const promise = new Promise((resolve, reject) => {\n      const apiURL = getTrainerApi + \"/\" + _id;\n\n\n      this.httpClient.get(apiURL).toPromise()\n        .then((res: any) => {\n          // Success\n\n\n\n          resolve(res);\n\n        },\n          err => {\n\n\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n  }\n */\n \n public emailToken(email: string) {\n\n \n\n    let apiEp = this.SERVER_URL + Global.tableName + '/getToken/' + email ;\n\n  \n  \n\n    const promise = new Promise((resolve, reject) => {\n  \n      this.httpClient.get(apiEp).toPromise()\n        .then((res: any) => {\n          // Success\n\n           \n\n          resolve(res);\n\n        },\n          err => {\n\n          \n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n  }\n\n  public listUserStories() {\n\n    var listApi = this.SERVER_URL + Global.tableName + \"/userStories\";\n\n  \n  \n    const promise = new Promise((resolve, reject) => {\n      const apiURL = listApi;\n\n  \n\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n      this.httpClient.get(apiURL).toPromise()\n        .then((res: any) => {\n\n        \n      \n          \n\n          resolve(res);\n\n\n        },\n          err => {\n\n\n\n\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n  }\n \n  public list() {\n\n    var listApi = this.SERVER_URL + Global.tableName;\n\n\n  \n    const promise = new Promise((resolve, reject) => {\n      const apiURL = listApi;\n\n  \n\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n      this.httpClient.get(apiURL).toPromise()\n        .then((res: any) => {\n          resolve(res);\n        },\n          err => {\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n  }\n\n  public listMsg() {\n\n    var listApi = this.SERVER_URL + Global.tableName + \"/listMsg/X\" ;\n\n\n  \n    const promise = new Promise((resolve, reject) => {\n      const apiURL = listApi;\n\n  \n\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n      this.httpClient.get(apiURL).toPromise()\n        .then((res: any) => {\n          resolve(res);\n        },\n          err => {\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n  }\n\n  // public listToArray() {\n\n  //   var listApi = this.SERVER_URL + Global.tableName;\n  //   var recs = []; \n\n  \n  //   const promise = new Promise((resolve, reject) => {\n  //     const apiURL = listApi;\n\n  \n\n  //     const headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  //     this.httpClient.get(apiURL).toPromise()\n  //       .then((res: any) => {\n        \n  //         res.json().subscribe(data => {\n  //           recs = data.map() \n  //       },\n  //   );\n\n  //         resolve(res);\n        \n        \n  //       },\n  //         err => {\n  //           reject(err);\n  //         }\n  //       );\n  //   });\n\n  //   return promise;\n  // }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { Global } from '../lib/global';\nimport { RestSvc } from '../lib/restSvc';\nimport { DialogService } from '../lib/dialog';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-lms-menu',\n  templateUrl: './lms-menu.component.html',\n  styleUrls: ['./lms-menu.component.scss']\n})\nexport class LmsMenuComponent implements OnInit {\n\n\n\n  constructor(private dlgSvc: DialogService, private restSvc: RestSvc, private _Activatedroute: ActivatedRoute) { }\n\n\n\n\n\n  name = \"\";\n  aboutMe = \"\";\n  mobileNbr = \"\";\n  dob = \"\";\n  address = \"\";\n\n\n  // Education\n  edus = [];\n  cboEdus = []\n  edu = \"\";\n  eduNote = \"\";\n  eduTitle = \"\";\n  eduSelected = \"Add Education\";\n  showEduTitle = true;\n\n\n  // Skills\n  skills = [];\n  cboSkills = []\n  cboSkillRates = [\"1 Star\", \"2 Stars\", \"3 Stars\", \"4 Stars\", \"5 Stars\"];\n  skillRate = \"\";\n  skill = \"\";\n  skillNote = \"\";\n  skillTitle = \"\";\n  skillSelected = \"Add Skill\";\n  showSkillTitle = true;\n\n\n  // Certs\n  certs = [];\n  cboCerts = []\n  cert = \"\";\n  certNote = \"\";\n  certTitle = \"\";\n  certSelected = \"Add Skill\";\n  showCertTitle = true;\n\n\n\n  // Acheivment\n  acheives = [];\n  cboAcheives = []\n  acheive = \"\";\n  acheiveNote = \"\";\n  acheiveTitle = \"\";\n  acheiveSelected = \"Add Acheivement\";\n  attachAcheive = \"\";\n  showAcheiveTitle = true;\n\n\n  // Expereinces\n  exps = [];\n  cboExps = [];\n  exp = \"\";\n  expNote = \"\";\n  expTitle = \"\";\n  expSelected = \"Add Education\";\n\n  // for Optimus Minds\n  moeExpiry = \"\";\n  moeFile = \"\";\n  program = \"\";\n  aiChk = false;\n  atRiskChk = false;\n  careerChk = false;\n  dramaChk = false;\n  danceChk = false;\n  itChk = false;\n  skillsChk = false;\n  tongueChk = false;\n  musicChk = false;\n  outdoorChk = false;\n  sportsChk = false;\n  visualChk = false;\n\n  // certFile = \"\" ;\n  attachCert = \"\";\n\n  newCert = false;\n  newEdu = false;\n  newSkill = false;\n  newExp = false;\n  newAcheive = false;\n\n\n\n\n\n\n\n  // End of Getters & Setters\n\n\n\n\n\n\n  showExpTitle = true;\n\n\n\n\n\n\n  ngOnInit(): void {\n\n\n\n\n    switch (this._Activatedroute.snapshot.url.toString().toLowerCase()) {\n      case \"optimusminds\":\n        Global.init('optimusMinds');\n        break;\n      case \"lms\":\n        Global.init('lms');\n        break;\n      default:\n        Global.init('cvSalon');\n        break;\n    }\n\n\n    let email = this._Activatedroute.snapshot.paramMap.get(\"email\");\n\n\n    if (email === null) {\n\n      Global.dlgAuthMode = 1;\n\n\n      this.openModal('dlgAuth');\n\n    }\n    else {\n\n      this.restSvc.emailToken(email).then(\n        (msg) => {\n\n          let adminLevel = msg['adminLevel'];\n\n\n\n          Global.email = email;\n          Global.token = msg['token'];\n          Global.pin = msg['pin'];\n          Global._id = msg['_id'];\n          Global.adminLevel = adminLevel;\n          Global.dlgAuthMode = 2;\n\n          this.openModal('dlgAuth');\n\n        },\n        (err) => {\n\n          alert('Error: ' + JSON.stringify(err));\n\n        })\n\n    }\n\n\n\n  }\n\n\n  get mnu() {\n    return Global.mnu;\n  }\n\n  get clientName() {\n    return Global.clientName;\n  }\n\n  get programs() {\n    return Global.locData[\"programs\"];\n  }\n\n  get stage() {\n\n\n    return Global.locData[\"stage\"];\n\n\n  }\n\n  openModal(id: string) {\n\n    this.dlgSvc.open(id);\n  }\n\n  // -\n  onWelcome() {\n    Global.mnu = -1;\n  }\n\n  onAboutMe() {\n    // if (this.stage <= -1) {\n    //   alert(\"Please view Welcome Page and select Next Step\");\n    //   return;\n    // }\n    Global.mnu = 0;\n    Global.lmsMenuName = \"aboutMe\"\n  }\n\n\n  // Profile\n  onMyClassMates() {\n    // if (this.stage < 1) {\n    //   alert(\"Please enter your informaton on About Yourself Page and select Next Step\");\n    //   return;\n    // }\n\n    this.restSvc.list().then(\n      (msg) => {\n\n        //  var result = Object.keys(msg).map((key => [key]));\n\n        var result = Object.entries(msg);\n\n        Global.lmsCards = msg;\n         var ix = 0 ;\n\n         result.forEach(([key, value]) => {\n          this.restSvc.getClassPhoto(value._id) ;\n          \n        })\n\n\n      \n      },\n      (err) => {\n\n        alert('Error: ' + JSON.stringify(err));\n\n      })\n\n\n\n    Global.mnu = 1;\n\n  }\n\n  onVideo() {\n\n    // if (this.stage < 2) {\n    //   alert(\"Please view Class Participants and select Next Step\");\n    //   return;\n    // }\n\n    Global.mnu = 2;\n  }\n\n\n  onAssign1A() {\n\n    // if (this.stage < 3) {\n    //   alert(\"Please watch Video and select Next Step\");\n    //   return;\n    // }\n\n    Global.mnu = 3;\n\n\n\n  }\n\n  onAssign1B() {\n\n\n    // alert(\"Access to this page will be made availalble after all learners have submitted Assignment 1A\");\n    // return;\n   \n\n    Global.mnu = 4;\n\n    this.restSvc.listUserStories().then(\n\n      (msg) => {\n\n\n\n        Global.lmsUserStories = msg;\n\n\n\n      },\n      (err) => {\n\n        alert('Error: ' + JSON.stringify(err));\n\n      })\n\n\n\n\n  }\n\n  onFinal() {\n\n    // if (this.stage <=  5 ) {\n    //   alert(\"Please complete Assignment 1B and select Next Step\") ;\n    //   return ;\n    // }\n\n    // if (this.stage < 5) {\n    //   alert(\"Please complete Assignment 1B and select Next Step\");\n    //   return;\n    // }\n\n    this.restSvc.listMsg().then(\n\n      (msg) => {\n\n\n\n        Global.msgs = msg;\n\n\n\n      },\n      (err) => {\n\n        alert('Error: ' + JSON.stringify(err));\n\n      })\n\n\n\n    Global.mnu = 5;\n  }\n\n  onClassChat() {\n    Global.mnu = 6;\n\n  }\n\n  onFeedBack() {\n    Global.mnu = 7;\n  }\n\n\n\n}","<div class=\"mainContent\">\n  <div class=\"bg\" style=\"height:80vh;\">\n\n    <div class=\"boxWelcome\" [ngStyle]=\"{ color: mnu == -1 ? 'white' : 'orange' }\" (click)=\"onWelcome()\">\n      Welcome \n    </div>\n\n    \n    <div class=\"box0\" [ngStyle]=\"{ color: mnu == 0 ? 'white' : 'orange' }\"  (click)=\"onAboutMe()\">\n      About Yourself\n    </div>\n\n      <div class=\"box1\" [ngStyle]=\"{ color: mnu == 1 ? 'white' : 'orange' }\"   (click)=\"onMyClassMates()\">\n      Class Participants\n    </div>\n\n\n   \n    <div class=\"box2\" [ngStyle]=\"{ color: mnu ==  2 ? 'white' : 'orange' }\" (click)=\"onVideo()\">\n      1.Watch Video  \n    </div>\n\n    <div class=\"box3\" [ngStyle]=\"{ color: mnu == 3 ? 'white' : 'orange' }\" (click)=\"onAssign1A()\">\n      2.Assignment 1A \n    </div>\n\n\n    <div class=\"box4\" [ngStyle]=\"{ color: mnu == 4 ? 'white' : 'orange' }\" (click)=\"onAssign1B()\">\n      3.Assignment 1B  \n      \n    </div>\n\n    <div class=\"box5\" [ngStyle]=\"{ color: mnu == 5 ? 'white' : 'orange' }\" (click)=\"onFinal()\">\n      4.Feedback\n    </div>\n\n\n    <!-- <div class=\"box6\" [ngStyle]=\"{ color: mnu == 6 ? 'white' : 'orange' }\" (click)=\"onClassChat()\">\n     Class Chat\n    </div>\n\n\n    <div class=\"box7\" [ngStyle]=\"{ color: mnu == 7 ? 'white' : 'orange' }\" (click)=\"onFeedBack()\">\n      Instructor Feeback\n    </div>  -->\n\n    <div class=\"iconWelcome\" [ngStyle]=\"{ color: mnu == -1 ? 'white' : 'orange' }\"  (click)=\"onWelcome()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n\n    <div class=\"icon0\" [ngStyle]=\"{ color: mnu == 0 ? 'white' : 'orange' }\"   (click)=\"onAboutMe()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n    \n    \n    <div class=\"icon1\" [ngStyle]=\"{ color: mnu == 1 ? 'white' : 'orange' }\"  (click)=\"onMyClassMates()\">\n      <i class=\"material-icons\">play_arrow</i>\n      \n   \n    </div>\n\n    \n    <div class=\"icon2\" [ngStyle]=\"{ color: mnu == 2 ? 'white' : 'orange' }\"  (click)=\"onVideo()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n    <div class=\"icon3\" [ngStyle]=\"{ color: mnu == 3 ? 'white' : 'orange' }\"    (click)=\"onAssign1A()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n    <div class=\"icon4\"  [ngStyle]=\"{ color: mnu == 4 ? 'white' : 'orange' }\"   (click)=\"onAssign1B()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n    <div class=\"icon5\"  [ngStyle]=\"{ color: mnu == 5 ? 'white' : 'orange' }\"   (click)=\"onFinal()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n  </div>\n</div>\n\n\n\n\n<dialog id=\"dlgProfile\">\n\n  <div>\n\n\n    <input id=\"name\" name=\"name\" type=\"text\" [(ngModel)]=\"name\"> \n \n\n  </div> \n\n</dialog>\n\n\n\n\n\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Global } from '../lib/global';\nimport { RestSvc } from '../lib/restSvc';\nimport { DialogService } from '../lib/dialog';\nimport { HttpEventType, HttpErrorResponse } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-lms-window',\n  templateUrl: './lms-window.component.html',\n  styleUrls: ['./lms-window.component.scss']\n})\nexport class LmsWindowComponent implements OnInit {\n\n  aboutMe = \"\";\n  name = \"\";\n  mobileNbr = \"\";\n  email = \"\";\n  function = \"\";\n  benefit = \"\";\n  role = \"\";\n  idx = 0;\n  reason = \"\";\n  points = 0;\n  storyOwnerId = \"\";\n  storyNbr = 0;\n\n\n  selectedFile: File;\n\n  constructor(private dlgSvc: DialogService, private restSvc: RestSvc) { }\n\n  ngOnInit(): void {\n  }\n\n  get mnu() {\n    return Global.mnu;\n  }\n\n  get msgs() {\n    return Global.msgs ;\n  }\n\n  get lmsCards() {\n\n    return Global.lmsCards;\n  }\n\n  get lmsUserStories() {\n\n    return Global.lmsUserStories;\n  }\n\n  get userStories() {\n    return Global.locData[\"userStories\"];\n  }\n\n  get lmsMenuName() {\n    return Global.lmsMenuName;\n  }\n\n  get myName() {\n    return Global.locData[\"name\"];\n  }\n\n  get myEmail() {\n    return Global.locData[\"email\"];\n  }\n\n  get myMobileNbr() {\n    return Global.locData[\"mobileNbr\"];\n  }\n\n  get myAboutMe() {\n    return Global.locData[\"aboutMe\"];\n  }\n\n  get photo() {\n\n    return Global.photo;\n  }\n\n  get trainerPhoto() {\n\n    return Global.trainerPhoto;\n  }\n\n  get photo1() {\n\n    return Global.photoList[0];\n  }\n\n  get photo2() {\n\n    return Global.photoList[1];\n  }\n\n  // getPhoto() {\n\n  //    var ix = 0;\n\n  //   for(ix; ix <  Global.photoList.length; ix++) {\n  //     if (Global.photoList[ix]._id == _id) {\n  //       return Global.photoList[ix].img ;\n  //       break ; \n  //     } \n      \n  //   }\n\n   \n   \n  // }\n\n  getLearnerPhoto(_id) {\n         \n\n        var ix = 0;\n\n       // return Global.photoList[ix].img ;\n\n      \n        for(ix; ix <  Global.photoList.length; ix++) {\n         \n        //  alert(Global.photoList[ix]._id ) ;\n         \n          if (Global.photoList[ix]._id == _id) {\n            return Global.photoList[ix].img ;\n            break ; \n          } \n          \n        }\n  }\n\n\n  get stage() {\n\n\n    return Global.locData[\"stage\"];\n\n\n  }\n\n  onInfo() {\n    this.name = Global.locData[\"name\"];\n    this.mobileNbr = Global.locData[\"mobileNbr\"];\n\n    if (Global.locData[\"email\"] != \"\") {\n      this.email = Global.locData[\"email\"];\n    }\n    else {\n      this.email = Global.email;\n    }\n\n\n    this.aboutMe = Global.locData[\"aboutMe\"];\n    this.dlgSvc.open('dlgInfo');\n  }\n\n\n  onAddPoints(_id: string, _nbr, _role, _function, _benefit) {\n\n    this.storyOwnerId = _id;\n    this.storyNbr = _nbr;\n\n    this.reason = \"\";\n    this.points = 0;\n\n\n\n    this.role = _role;\n    this.function = _function;\n    this.benefit = _benefit;\n\n    this.dlgSvc.open('dlgPoints');\n\n  }\n\n  onCancelPoints() {\n\n    this.dlgSvc.close('dlgPoints');\n\n  }\n\n  onSavePoints() {\n\n\n\n    let objData = {};\n\n    objData[\"nbr\"] = this.storyNbr;\n    objData[\"reason\"] = this.reason;\n    objData[\"points\"] = this.points;\n\n\n    alert(JSON.stringify(objData));\n\n\n    this.restSvc.addPoint(objData, this.storyOwnerId).then(\n      (msg) => {\n\n\n\n        this.dlgSvc.close('dlgPoints');\n\n        this.restSvc.listUserStories().then(\n\n          (msg) => {\n\n\n\n            Global.lmsUserStories = msg;\n\n\n\n          },\n          (err) => {\n\n            alert('Error: ' + JSON.stringify(err));\n\n          })\n\n      },\n      (err) => {\n\n\n        alert(JSON.stringify(err));\n\n      }\n\n\n    )\n\n  }\n\n  // onPhoto() {\n\n\n  // }\n\n  upLoadPhoto(_id: string, docType, docTable, docId, file) {\n\n    const formData = new FormData();\n\n    formData.append('_id', _id);\n    formData.append('docTable', docTable);\n    formData.append('docId', docId);\n    formData.append('file', file);\n\n    file.inProgress = true;\n\n\n\n\n    this.restSvc.upLoadDoc(formData, docType).pipe(\n      map(event => {\n        switch (event.type) {\n          case HttpEventType.UploadProgress:\n            file.progress = Math.round(event.loaded * 100 / event.total);\n\n\n            break;\n          case HttpEventType.Response:\n            return event;\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        file.inProgress = false;\n\n        alert(error.message);\n        return of(`${file.data.name} upload failed.`);\n\n      })).subscribe((event: any) => {\n        if (typeof (event) === 'object') {\n\n\n\n        }\n      });\n\n  }\n\n  onFileChanged(event) {\n\n    this.selectedFile = event.target.files[0];\n\n    this.upLoadPhoto(Global._id, 'photo', Global.tableName, 1, this.selectedFile);\n\n    this.restSvc.makeImgFromBlob(this.selectedFile);\n  }\n\n\n  onCancelInfo() {\n    this.dlgSvc.close('dlgInfo');\n  }\n\n\n  onNextStep(currentStep) {\n\n\n  // alert(currentStep) ;\n \n    switch (currentStep) {\n      case -1:\n        Global.locData[\"stage\"] = 0;\n        Global.mnu = 0;\n        break;\n      case 0:\n        if (Global.locData[\"name\"] == \"\" || Global.locData[\"email\"] == \"'\") {\n          alert(\"You must at a minimum provide your Name and Email Address\");\n          return;\n        }\n\n        Global.locData[\"stage\"] = 1;\n        this.onSaveInfo();\n        Global.mnu = 1;\n\n        this.restSvc.list().then(\n          (msg) => {\n\n            Global.lmsCards = msg;\n        \n\n          },\n          (err) => {\n\n            alert('Error: ' + JSON.stringify(err));\n\n          })\n\n\n       \n        break;\n      case 1:\n        Global.locData[\"stage\"] = 2;\n        this.onSaveStage();\n        Global.mnu = 2;\n\n        \n        break;\n      case 2:\n        Global.locData[\"stage\"] = 3;\n        this.onSaveStage();\n        Global.mnu = 3;\n\n        \n          break;\n          case 3:\n              Global.locData[\"stage\"] = 4;\n              this.onSaveStage();\n              Global.mnu = 4;\n      \n              this.restSvc.listUserStories().then(\n    \n                (msg) => {\n              \n                  var result = Object.entries(msg);\n                  \n                 \n                  var ix = 0 ;\n\n                  result.forEach(([key, value]) => {\n                   this.restSvc.getClassPhoto(value._id) ;\n                  })\n\n                  Global.lmsUserStories = msg ;\n                  \n            \n                },\n                (err) => {\n              \n                  alert('Error: ' + JSON.stringify(err));\n              \n                })\n                break;\n                case 4:\n                  Global.locData[\"stage\"] = 5;\n                  this.onSaveStage();\n                  Global.mnu = 5;\n\n    }\n\n  }\n\n  onSaveStage() {\n\n    let objData = {};\n\n    let aryKeys = Object.keys(Global.locData);\n    let key = \"\";\n\n\n    for (let i = 0; i < aryKeys.length; i++) {\n      key = aryKeys[i];\n\n      if (Global.locData[key] != Global.svrData[key]) {\n        objData[key] = Global.locData[key];\n      }\n    }\n\n\n    this.restSvc.update(objData, Global._id).then(\n      (msg) => {\n\n\n      },\n      (err) => {\n\n        alert(JSON.stringify(err));\n\n      }\n    )\n  }\n\n\n  \n  \n\n  onSaveInfo() {\n\n    Global.locData[\"name\"] = this.name;\n    Global.locData[\"email\"] = this.email;\n    Global.locData[\"mobileNbr\"] = this.mobileNbr;\n    Global.locData[\"aboutMe\"] = this.aboutMe;\n    //Global.locData[\"stage\"] = Global.locData[\"stage\"];\n\n\n    this.dlgSvc.close('dlgInfo');\n\n    let objData = {};\n\n\n\n    let aryKeys = Object.keys(Global.locData);\n    let key = \"\";\n\n\n    for (let i = 0; i < aryKeys.length; i++) {\n      key = aryKeys[i];\n\n      if (Global.locData[key] != Global.svrData[key]) {\n        objData[key] = Global.locData[key];\n      }\n    }\n\n\n    if (Global._id === \"\") {\n\n\n\n      this.restSvc.create(objData).then(\n        (rcvd) => {\n\n\n\n          Global._id = rcvd['_id'];\n\n\n\n\n        },\n        (err) => {\n\n\n          alert(err);\n        }\n      )\n\n    }\n    else {\n\n\n\n      this.restSvc.update(objData, Global._id).then(\n        (msg) => {\n\n\n\n\n\n        },\n        (err) => {\n\n          alert(JSON.stringify(err));\n\n        }\n      )\n    }\n\n\n\n  }\n\n  onEditStory(nbr) {\n\n\n    this.idx = nbr - 1;\n\n\n    this.role = Global.locData[\"userStories\"][this.idx].role;\n    this.function = Global.locData[\"userStories\"][this.idx].function;\n    this.benefit = Global.locData[\"userStories\"][this.idx].benefit;\n\n    this.dlgSvc.open('dlgStory');\n\n  }\n\n  onSaveStory() {\n    Global.locData[\"userStories\"][this.idx].role = this.role;\n    Global.locData[\"userStories\"][this.idx].function = this.function;\n    Global.locData[\"userStories\"][this.idx].benefit = this.benefit;\n\n    let objData = {};\n\n    objData[\"userStories\"] = Global.locData[\"userStories\"]\n\n\n    this.restSvc.update(objData, Global._id).then(\n      (msg) => {\n\n        this.dlgSvc.close('dlgStory');\n      },\n      (err) => {\n\n        alert(JSON.stringify(err));\n\n      }\n\n       \n    )\n\n    // let cnt  =  0;\n    // let storyDone = true ;\n\n    //     for(cnt = 0; cnt < 3; cnt++) {\n\n    //       if (Global.locData[\"userStories\"][cnt].role == \"\") {\n    //         storyDone = false ;\n    //         break ;\n    //       }\n\n    //       if (Global.locData[\"userStories\"][cnt].function == \"\") {\n    //         storyDone = false ;\n    //         break ;\n    //       }\n    //       if (Global.locData[\"userStories\"][cnt].benefit == \"\") {\n    //         storyDone = false ;\n    //         break ;\n    //       }\n\n\n\n    //     }\n\n     //   Global.storyDone = storyDone ;\n\n  }\n\n  onCancelStory() {\n\n    this.dlgSvc.close('dlgStory');\n  }\n}\n","<div *ngIf=\"mnu==-1\">\n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around center\">\n\n        <mat-card class=\"matCardInstruction\">\n\n            <mat-card-header>\n                <div mat-card-avatar class=\"example-header-image\"></div>\n                \n            </mat-card-header>\n            <img [src]=\"trainerPhoto\" alt=\"My Photo\">\n                  \n            <mat-card-content>\n                Your Facilitator: Hardeep Singh <br> \n                Email: Hardeep@Sysbit.com<br> \n                Mobile: +65-87133375<br> \n                <br> \n               \n               <h1>\n                Congratulations on selecting Agile Practitioner Training.\n               </h1>\n               My name is Hardeep Singh and I am an Agile Veteran. \n               <br> \n           \n               After going through the training, you are on your way to becoming an Agilist. \n               The training is delivered on an asynchronous mode with group participation. You are encouraged to update information \n               about yourself to facilitate effective group participation and foster good team spirit.\n               <br> \n               <br> \n               \n           <b>  <u> Training Sequence </u></b>  \n               <br>\n               1. Watch Video - Short video on user stories <br> \n               2. Assignment 1A -Create User Stories <br> \n               3. Assignment 1B - Priortization (Group participation) <br> \n               4. Feedback <br> \n                    \n              \n\n\n            </mat-card-content>\n            <mat-card-actions>\n                <!-- <button *ngIf=\"stage==-1\" mat-raised-button color=\"primary\"  (click)=\"onNextStep(-1)\">Next Step</button> -->\n            </mat-card-actions>\n        </mat-card>\n   \n       \n  \n    </div>\n\n    \n        \n\n    </div>\n\n\n\n<div *ngIf=\"mnu==0\"> \n\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n      \n        <mat-card class=\"matCard0\">\n            <mat-card-header>\n                <div mat-card-avatar class=\"example-header-image\"></div>\n                <mat-card-title>{{myName}}</mat-card-title>\n                <mat-card-subtitle>{{myEmail}}</mat-card-subtitle>\n                <mat-card-subtitle>{{myMobileNbr}}</mat-card-subtitle>\n            </mat-card-header>\n            <img [src]=\"photo\" alt=\"My Photo\">\n            <mat-card-content>\n                <div class=\"cssText\">\n                    <div [innerHTML]=\"myAboutMe\"></div>\n                </div>\n               \n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-raised-button color=\"primary\" style=\"margin-right:5px;\" (click)=\"onInfo()\">My Info</button>\n\n\n                <input style=\"display: none\" type=\"file\" (change)=\"onFileChanged($event)\" #fileInput>\n                <button *ngIf=\"myName!=''\" mat-raised-button color=\"primary\" style=\"margin-right:5px;\"\n                    (click)=\"fileInput.click()\">My Photo</button>\n\n\n            </mat-card-actions>\n        </mat-card>\n\n        \n\n    </div>\n\n    \n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n        <mat-card class=\"matCardInstruction\">\n    \n         \n                  \n            <mat-card-content>\n               \n               \n               <h1>\n                Introduce Yourself\n               </h1>\n               \n               The training is delivered on an aynschronus mode with group particapation. You are encouraged to update information \n               about yourself to facilitate group participation and foster good team spirit.\n    \n            </mat-card-content>\n            <mat-card-actions>\n                <mat-card-actions>\n                    <!-- <button *ngIf=\"stage==0\" mat-raised-button color=\"primary\"  (click)=\"onNextStep(0)\">Next Step</button> -->\n                </mat-card-actions>\n    \n            </mat-card-actions>\n        </mat-card>\n    </div>\n    \n</div> \n\n<div *ngIf=\"mnu==1\">\n\n\n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around center\">\n      \n      \n\n    <div *ngFor=\"let lmsCard of lmsCards; ; index as i\">\n\n\n\n        <mat-card class=\"matCard1\">\n            <mat-card-header>\n                <div mat-card-avatar class=\"example-header-image\"></div>\n                <mat-card-title>{{lmsCard.name}}</mat-card-title>\n                <mat-card-subtitle>{{lmsCard.email}}</mat-card-subtitle>\n                <mat-card-subtitle>Mobile:{{lmsCard.mobileNbr}}</mat-card-subtitle>\n            \n            </mat-card-header>\n         \n            <img [src]=\"getLearnerPhoto(lmsCard._id)\" alt=\"Class Photo\">\n            <!-- <img [src]=\"photo\" alt=\"My Photo\"> -->\n            <!-- <img mat-card-image [src]= \"lmsCard.photo\" >  -->\n            <!-- <img src=\"learnerPhoto\" /> -->\n             <!-- <img [src]={{lmsCard.photo}} alt=\"Learner Photo\">   -->\n             <!-- //<img [src]=\"learnerPhoto(0)\" alt=\"Learner Photo\"> -->\n            <mat-card-content>\n                <div class=\"cssText\">\n                    <div [innerHTML]=\"lmsCard.aboutMe\"></div>\n                </div>\n\n            </mat-card-content>\n\n        </mat-card>\n\n\n\n\n    </div>\n</div>\n\n<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n    <mat-card class=\"matCardInstruction\">\n\n     \n              \n        <mat-card-content>\n           \n           \n           <h1>\n            Your Class\n           </h1>\n           \n            Get to know your classmates. Like you they are chartering the route to the Agilist world.\n\n        </mat-card-content>\n        <mat-card-actions>\n            <!-- <button *ngIf=\"stage==1\" mat-raised-button color=\"primary\"  (click)=\"onNextStep(1)\">Next Step</button> -->\n\n        </mat-card-actions>\n    </mat-card>\n</div>\n\n</div>\n\n<div *ngIf=\"mnu==2\">\n\n   \n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around center\">\n\n       \n\n    <youtube-player \n    videoId=\"apOvF9NVguA\" \n    suggestedQuality=\"highres\" \n    [height]=\"350\" \n    [width]=\"700\" \n    [startSeconds]=\"50\"\n    [endSeconds]=\"258\">\n  </youtube-player>\n\n\n<p>\n   Video taken from youtube link https://www.youtube.com/watch?v=apOvF9NVguA uploaded by \n    Mark Shead\n</p>\n\n\n</div>\n\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around center\">\n\n    <mat-card class=\"matCardInstruction\">\n        <mat-card-header>\n           \n            <mat-card-title>\n               \n            </mat-card-title>\n            \n        </mat-card-header>\n      \n        <mat-card-content>\n           \n<p style=\"font-size: 18px;\">\n    Watch the short video on the \n    purpose of a User Story and the required attributes of a good user story. \n</p>\n\n      <hr>\n        Who (role) - the user who will get the benefit from the function <br> \n        What (function) - the feature that is needed by the user <br>   \n        Why (benefit) - the value it will provide to the user <br> \n        <hr>\n        A good user story should be independent, negotiable, valuable, small and testable (INVEST) \n    \n        </mat-card-content>\n        <mat-card-actions>\n            <!-- <button *ngIf=\"stage==2\" mat-raised-button color=\"primary\"  (click)=\"onNextStep(2)\">Next Step</button> -->\n\n        </mat-card-actions>\n    </mat-card>\n\n</div>\n\n</div>\n\n <div *ngIf=\"mnu==3\">\n\n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around center\">\n\n        <mat-card class=\"matCardInstruction\">\n            <mat-card-header>\n               \n                <mat-card-title>\n                 \n\n                </mat-card-title>\n                \n            </mat-card-header>\n          \n            <mat-card-content>\n\n                <ul> <b> Situation </b> </ul> <hr>\n                <p>\n                Entertainment venue operators want to start operating as a vaccine has become available for a virus that has forced them to shut down. \n                Though the vaccine is available, it will be rolled out gradually to the population and not everyone may want to be vaccinated. \n                The operators want to create a mobile application in cooperation with the government to provide vaccinated patrons with a “Green Pass” token displayed on the mobile device together with the last 4 digits of identity card number, This will allow the vaccinated users entry into the entertainment venue.  \n               </p> \n               <hr>\n               <ul> <b> User Story </b> </ul> <hr>\n               <br>\n               \n               Write 3 user stories that will benefit a user or venue operator or the government. \n\n               <br>\n               <br>\n                   Remember the 3 attributes of a good user story. \n                   <br>\n                     \n                        Who (role)  \"As a\"  <br>\n                        What (function) \"I want\" <br>\n                        Why (benefit)  \"So That\" <br>  \n                    \n            </mat-card-content>\n            <mat-card-actions>\n                <!-- <button *ngIf=\"stage==3\" mat-raised-button color=\"primary\"  (click)=\"onNextStep(3)\">Next Step</button>\n     -->\n            </mat-card-actions>\n        </mat-card>\n     \n    </div>\n      <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around center\">\n     \n        <div *ngFor=\"let userStory  of userStories;\">\n        <mat-card class=\"matCard2\">\n        <mat-card-header>\n           \n            <mat-card-title></mat-card-title>\n            \n        </mat-card-header>\n      \n        <mat-card-content>\n            <ul><b>User Story</b></ul> \n            <hr>\n            As a <b><u> {{userStory.role}} </u></b>, I want <b><u> {{userStory.function}} </u></b> so that \n            <b><u> {{userStory.benefit}} </u></b>\n           \n            \n        </mat-card-content>\n        <mat-card-actions>\n       \n            <button mat-raised-button color=\"primary\" style=\"margin-right:5px;\" (click)=\"onEditStory(userStory.nbr)\">Edit</button>\n           \n\n        </mat-card-actions>\n    </mat-card>\n\n        </div>\n    \n   \n\n\n</div>\n</div> \n\n<div *ngIf=\"mnu==4\">\n \n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around center\">\n\n        <mat-card class=\"matCardInstruction\">\n            <mat-card-header>\n               \n                <mat-card-title>\n                    Prioritization of User stories submitted by the class. \n                 \n                     \n\n                </mat-card-title>\n                \n            </mat-card-header>\n          \n            <mat-card-content>\n                  Working together a class you need to prioritize the user stories giving higher points to the user stories that deliver \n                  greatest value to the user. You need to provide the justification for the prioritization value.\n            </mat-card-content>\n            <mat-card-actions>\n                <!-- <button *ngIf=\"stage==4\" mat-raised-button color=\"primary\"  (click)=\"onNextStep(4)\">End Assignment</button>\n     -->\n    \n            </mat-card-actions>\n        </mat-card>\n     \n    </div>\n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around center\">\n     \n        <div *ngFor=\"let userStory  of lmsUserStories;\">\n       <div *ngIf=\"userStory.function != ''\" >\n\n      \n        <mat-card class=\"matCard2\">\n        <mat-card-header>\n           \n            <mat-card-title>\n              \n            </mat-card-title>\n            \n        </mat-card-header>\n      \n        <mat-card-content>\n            From: <b>{{userStory.learner}} </b> \n            <br>\n            Total Points: <b>{{userStory.totPoints}}</b> \n            <hr>\n            <u> <b>User Story</b> </u> \n            <br>\n            As a <b><u> {{userStory.role}} </u></b>, I want <b><u> {{userStory.function}} </u></b> so that \n            <b><u> {{userStory.benefit}} </u></b>\n           \n            <hr>\n            <u> <b>Justification </b> </u>\n            <div *ngFor=\"let pnt  of userStory.points ;\"> \n                  {{pnt.reason }} = {{pnt.points}}\n            </div>     \n\n\n        </mat-card-content>\n        <mat-card-actions>\n       \n            <button mat-raised-button color=\"primary\" style=\"margin-right:5px;\" (click)=\"onAddPoints(userStory._id, userStory.nbr, userStory.role,userStory.function, userStory.benefit)\" >Add Priority Points</button>\n           \n\n        </mat-card-actions>\n    </mat-card>\n  \n</div>   \n\n        </div>\n    \n\n\n</div>\n\n</div>\n\n<div *ngIf=\"mnu==5\">\n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around center\">\n\n        <mat-card class=\"matCardInstruction\">\n            <mat-card-header>\n               \n                <mat-card-title>\n                   Feedback from Facilitator on your Training & Assignments\n                 \n                     \n\n                </mat-card-title>\n                \n            </mat-card-header>\n          \n            <mat-card-content>\n                \n\n\n            </mat-card-content>\n            <mat-card-actions>\n               \n    \n            </mat-card-actions>\n        </mat-card>\n     \n    </div>\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around center\">\n     \n        <div *ngFor=\"let msg  of msgs\">\n            \n        <mat-card class=\"matCard2\">\n        <mat-card-header>\n           \n            <mat-card-title>\n              \n            </mat-card-title>\n            \n        </mat-card-header>\n      \n        <mat-card-content>\n            {{msg.dateTime}}\n            <hr>\n            {{msg.msg}}\n\n        </mat-card-content>\n        <mat-card-actions>\n       \n           \n\n        </mat-card-actions>\n    </mat-card>\n  \n</div>   \n\n        </div>\n    \n\n\n</div>\n\n\n\n\n<div *ngIf=\"mnu==6\">\n    Six\n</div>\n\n<div *ngIf=\"mnu==7\">\n    Seven\n</div>\n\n\n\n\n\n<dialog id=\"dlgInfo\">\n\n    <div fxLayout=\"column\" >\n\n\n        <label for=\"name\">Your Name *</label>\n        <input id=\"name\" name=\"name\" type=\"text\" [(ngModel)]=\"name\">\n\n        <label for=\"mobileNbr\">Mobile# *</label>\n        <input id=\"mobileNbr\" name=\"mobileNbr\" type=\"text\" [(ngModel)]=\"mobileNbr\" />\n\n\n        <label for=\"email\">Email</label>\n        <input id=\"email\" name=\"email\" type=\"text\" [(ngModel)]=\"email\" />\n\n        <label for=\"note\">Describe yourself</label>\n\n        <quill-editor class=\"richText\" [(ngModel)]=\"aboutMe\" [modules]=\"{ toolbar: false }\">\n        </quill-editor>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <div class=\"flushRight\"></div>\n\n\n            <button class=\"button-3d\" (click)=\"onCancelInfo()\">Cancel</button>\n            <button class=\"button-3d\" (click)=\"onSaveInfo()\">Save </button>\n\n        </div>\n   \n    </div>\n</dialog> \n\n<dialog id=\"dlgStory\">\n\n    <div fxLayout=\"column\" >\n       \n         <label for=\"name\">As a </label>\n        <input id=\"role\" name=\"role\" type=\"text\" [(ngModel)]=\"role\">\n\n        <label for=\"function\">I want</label>\n        <textarea id=\"function\" name=\"reason\"  [(ngModel)]=\"function\" rows=\"4\" cols=\"50\"> </textarea> \n        \n      \n          \n           \n        <label for=\"benefit\">So that</label>\n        <textarea id=\"benefit\" name=\"benefit\"  [(ngModel)]=\"benefit\" rows=\"4\" cols=\"50\">  </textarea> \n      \n      \n\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <div class=\"flushRight\"></div>\n            <button class=\"button-3d\" (click)=\"onCancelStory()\">Cancel</button>\n            <button class=\"button-3d\" (click)=\"onSaveStory()\">Save </button>\n        </div> \n   \n    </div>\n</dialog> \n\n\n\n<dialog id=\"dlgPoints\">\n\n    <div fxLayout=\"column\" >\n\n\n        As a {{role}}, I want {{function}} so that {{benefit}} \n        \n        <br>\n\n\n        <label for=\"reason\">Justification</label>\n        <textarea id=\"reason\" name=\"reason\"  [(ngModel)]=\"reason\" rows=\"4\" cols=\"50\">\n       \n         </textarea>\n            \n       \n        <label for=\"points\">Points (between 1 and 5):</label>\n        <input type=\"number\" id=\"points\" name=\"points\" min=\"1\" max=\"5\"  [(ngModel)]=\"points\"> \n\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <div class=\"flushRight\"></div>\n\n\n            <button class=\"button-3d\" (click)=\"onCancelPoints()\">Cancel</button>\n            <button class=\"button-3d\" (click)=\"onSavePoints()\">Save </button>\n\n        </div>\n   \n    </div>\n</dialog> ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lms',\n  templateUrl: './lms.component.html'\n\n  \n\n})\nexport class LmsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <div class=\"flex-container\"  >\r\n  \r\n    <div fxLayout=\"row wrap\"  >\r\n      <div  fxFlex=\"18%\" >\r\n             <app-lms-menu></app-lms-menu> \r\n      </div>\r\n      <div  fxFlex=\"82%\">\r\n            <app-lms-window></app-lms-window> \r\n      </div> \r\n      </div>  \r\n</div>  \r\n -->\r\n\r\n <div class=\"flex-container\">\r\n    <div fxLayout=\"row wrap\">\r\n      <div  fxFlex=\"100%\" fxFlex.gt-sm=\"18%\" >\r\n             <!-- <app-cv-salon-composer></app-cv-salon-composer>  -->\r\n             <app-lms-menu></app-lms-menu> \r\n      </div>\r\n      <div  fxFlex=\"100%\" fxFlex.gt-sm=\"82%\">\r\n        <app-lms-window></app-lms-window> \r\n      </div> \r\n      </div> \r\n     \r\n    </div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Global } from '../lib/global' ;\nimport {CtrlSvc} from '../lib/ctrlSvc' ;\n\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  constructor(private ctrlSvc: CtrlSvc) { }\n\n // docs: [{docType: string, docName: string}] ;\n ngOnInit(): void {\n\n}\n\npublic onSubmit()\n{\n  this.ctrlSvc.onSubmit() ;\n}\n\n public onQry()\n{\n  this.ctrlSvc.onQry() ;\n}\n\npublic onPdf()\n{\n  this.ctrlSvc.onPdf() ;\n}\n\npublic onZipPack()\n{\n  this.ctrlSvc.onZipPack() ;\n}\n\n\nget domainName() {\n  return Global.domainName ;\n}\n\nget logo() {\n   return Global.logo ;\n}\n \n\nget clientName() {\n  return Global.clientName;\n}\n\n\nget adminLevel() {\n\n   return Global.adminLevel ;\n\n}\n\nget showTopBar() {\n\n  return Global.showTopBar ; \n}\n\n}","<div *ngIf=\"showTopBar\">\n\n  <div *ngIf=\"adminLevel==0\" class='container' fxLayout=\"row\" fxLayoutAlign=\"end start\">\n    <button class=\"button-3d\" (click)=\"onSubmit()\">Submit</button>\n    <button class=\"button-3d\" (click)=\"onPdf()\">PDF</button>\n    <!-- <button class=\"button-3d\" (click)=\"onQry()\">Query</button> -->\n\n  </div>\n\n  <div *ngIf=\"adminLevel !=0\" class='container' fxLayout=\"row\" fxLayoutAlign=\"start start\">\n    <button class=\"button-3d\" (click)=\"onQry()\">Query</button>\n    <button class=\"button-3d\" (click)=\"onPdf()\">PDF</button>\n    <button class=\"button-3d\" (click)=\"onZipPack()\">Zip</button>\n  </div>\n  <br>\n  \n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Global } from '../lib/global' ;\nimport { DialogService } from '../lib/dialog';\nimport { RestSvc } from  '../lib/restSvc';\nimport {CtrlSvc} from '../lib/ctrlSvc' ;\n\nimport { HttpClient, HttpEvent, HttpErrorResponse, HttpEventType, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-optimus-minds-admin',\n  templateUrl: './optimus-minds-admin.component.html',\n  styleUrls: ['./optimus-minds-admin.component.scss']\n})\nexport class OptimusMindsAdminComponent implements OnInit {\n\n  trainerPickId = \"\";\n  trainExpPickIndex = 0 ;\n  docFile = \"\";\n  //docs = [] ;\n \n  //-----------\n /*  expScreenMode = false;\n\n  program = \"\" ;\n  trainName = \"\";\n  institute = \"\"\n  year =   \"\";\n  \n  trainExpPickId = \"\";\n  trainExpPickIndex = 0 ;\n  lastTrainExpId = \"\";\n  mode = \"\" ; */\n //-----------------\n  constructor(private restSvc: RestSvc,private ctrlSvc: CtrlSvc, private dlgSvc: DialogService, private httpClient: HttpClient) { }\n\n  ngOnInit(): void {\n\n    Global.init('optimusMinds'); \n  \n    let email = \"hardeepsysbit@gmail.com\" ;\n\n    this.restSvc.emailToken(email).then(\n      (msg) => {\n        let adminLevel = msg['adminLevel'];\n        Global.email = email;\n        Global.token = msg['token'];\n        Global.pin = msg['pin'];\n        Global._id = msg['_id'];\n        Global.adminLevel = 1;\n        Global.adminLevelReq = 1 ;\n        Global.dlgAuthMode = 2;\n       \n       \n\n        this.openModal('dlgAuth');\n\n\n  })\n  }\n\n  get programs() {\n    return Global.locData[\"programs\"]\n  }\n    \n  get docs() {\n    return Global.docs ;\n  }\n  \n  get trainersExist() {\n   return  Global.trainersExist ;\n  }\n\n  get trainers() {\n      return Global.trainers ;\n  }\n  \n  set trainers(value) {\n    Global.trainers = value ;\n  }\n\n\n\n   // for Optimus Minds\n\n   get aiChk() {\n     return Global.aiChk ;\n   }\n   set aiChk(value) {\n    Global.aiChk = value ;\n    Global.makeProgramList() ;\n  }\n\n  get  atRiskChk() {\n    return Global.atRiskChk ;\n  }\n  set  atRiskChk(value) {\n   Global.atRiskChk = value ;\n   Global.makeProgramList() ;\n }\n\n get careerChk() {\n  return Global.careerChk ;\n}\nset careerChk(value) {\n Global.careerChk = value ;\n Global.makeProgramList() ;\n}\n\nget dramaChk() {\n  return Global.dramaChk ;\n}\n\nset dramaChk(value) {\n Global.dramaChk = value ;\n Global.makeProgramList() ;\n}\n\nget  danceChk() {\n  return Global. danceChk ;\n  Global.makeProgramList() ;\n}\nset  danceChk(value) {\n Global.danceChk = value ;\n Global.makeProgramList() ;\n}\n\nget itChk () {\n  return Global.itChk ;\n}\n\nset itChk (value) {\n Global.itChk  = value ;\n Global.makeProgramList() ;\n\n}\n\nget skillsChk() {\n  return Global.skillsChk ;\n}\nset skillsChk(value) {\n Global.skillsChk = value ;\n Global.makeProgramList() ;\n}\n\nget tongueChk() {\n  return Global.tongueChk ;\n}\nset tongueChk(value) {\n Global.tongueChk = value ;\n Global.makeProgramList() ;\n}\n\n\n\nget  musicChk() {\n  return Global. musicChk ;\n}\nset  musicChk(value) {\n Global. musicChk = value ;\n Global.makeProgramList() ;\n}\n  \n \nget  outdoorChk () {\n  return Global. outdoorChk  ;\n}\nset  outdoorChk (value) {\n Global. outdoorChk  = value ;\n Global.makeProgramList() ;\n}\n  \n\nget sportsChk () {\n  return Global.sportsChk  ;\n}\nset sportsChk (value) {\n Global.sportsChk  = value ;\n Global.makeProgramList() ;\n}\n  \n\nget visualChk () {\n  return Global.visualChk  ;\n}\nset visualChk (value) {\n Global.visualChk  = value ;\n Global.makeProgramList() ;\n}\n  \n\n \n\n \n   onDocPick(docFolder: string, docFile: string) {\n      \n    this.docFile = docFile ;\n\n    docFolder = \"cert\" ;\n    docFile = \"Global.zip\" ;\n  \n    this.restSvc.getFile(Global._id,docFolder, docFile).then(\n\n      (data) => {\n\n\n        \n\n\n\n   });\n  }\n\n   onTrainerPick(trainerId: string) {\n      \n    this.trainerPickId =  trainerId ;\n\n    Global.docs = [] ;\n\n    this.restSvc.getById(trainerId).then(\n\n      (data) => {\n\n\n        let aryKeys = Object.keys(data);\n        let value = \"\";\n        for (let i = 0; i < aryKeys.length; i++) {\n          value = data[aryKeys[i]];\n          Global.svrData[aryKeys[i]] = value;\n          Global.locData[aryKeys[i]] = value;\n\n          \n\n        }\n\n       if (Global.svrData['moeFile'] != \"\") {\n       Global.docs.push({\"folder\": \"moe\", \"program\" :\"moe\" , \"title\": \"MOE : Expiry - \" + Global.svrData['moeExpiry'] ,\"file\":  Global.svrData['moeFile']})    ;\n   \n       }\n         \n          for (let j = 0; j < Global.svrData['certs'].length; j++) {\n           if (Global.svrData['certs'][j].file != '') {\n           //     this.docs.push({\"title\": Global.svrData['certs'][j].title,\"program\": Global.svrData['certs'][j].program,\"file\": Global.svrData['certs'][j].file})    ;\n                Global.docs.push({\"folder\": \"cert\",\"program\" : Global.svrData['certs'][j].program , \"title\": Global.svrData['certs'][j].program + \" : \" + Global.svrData['certs'][j].title,\"file\": Global.svrData['certs'][j].file})    ;\n   \n              }\n          }\n\n       \n\n       \n          for (let j = 0; j < Global.svrData['acheives'].length; j++) {\n           if (Global.svrData['acheives'][j].file != '') {\n                Global.docs.push({\"folder\": \"acheive\",\"program\" : Global.svrData['certs'][j].program ,\"title\": \"Acheivement : \" + Global.svrData['acheives'][j].title,\"file\": Global.svrData['acheives'][j].file})    ;\n            }\n          }\n\n       \n        \n\n\n      })\n\n\n    this.restSvc.getPhoto(trainerId);\n\n\n   }\n\n   public onQry() {\n     this.ctrlSvc.onQry() ;\n   }\n  \n   openModal(id: string) {\n      this.dlgSvc.open(id);\n  }\n\n}\n","\n<!-- <div fxLayout=\"row\">\n      \n      <div fxFlex=\"5\" fxHide fxShow.gt-xs></div> \n    \n      \n      <div fxFlex fxLayout=\"column\">\n    \n    \n    \n    \n    </div> \n     <div fxFlex=\"5\" fxHide fxShow.gt-xs></div> \n    </div> \n    \n     -->\n    \n    \n    <div fxLayout=\"row\">\n          \n      <div fxFlex=\"5\" fxHide fxShow.gt-xs></div> \n    \n    \n      <div fxFlex fxLayout=\"column\">\n    \n        <div  class=\"containerChk\">\n    \n          <input  class=\"leftA\" id=\"ai\" name=\"ai\" type=\"checkbox\"  [(ngModel)] = \"aiChk\" />\n          <label  class=\"rightA\" for=\"ai\">Artificial Intelligence</label>\n          \n          <input class=\"leftA\" id=\"atRisk\" name=\"atRisk\" type=\"checkbox\" [(ngModel)] = \"atRiskChk\" />\n          <label class=\"rightA\" for=\"atRisk\">At Risk</label>\n          \n          <input class=\"leftA\" id=\"career\" name=\"career\" type=\"checkbox\" [(ngModel)] = \"careerChk\" />\n          <label class=\"rightA\" for=\"career\">Career Perparation</label> \n          \n          <input class=\"leftA\" id=\"dance\" name=\"dance\" type=\"checkbox\" [(ngModel)] = \"danceChk\" />\n          <label class=\"rightA\" for=\"dance\">Dance</label> \n          \n          <input class=\"leftA\" id=\"drama\" name=\"drama\" type=\"checkbox\" [(ngModel)] = \"dramaChk\"  />\n          <label class=\"rightA\" for=\"drama\">Drama</label> \n          \n          <input class=\"leftA\" id=\"it\" name=\"it\" type=\"checkbox\" [(ngModel)] = \"itChk\" />\n          <label class=\"rightA\" for=\"it\">IT\\Multimedia</label>\n          \n          <input class=\"leftA\" id=\"skills\" name=\"skills\" type=\"checkbox\" [(ngModel)] = \"skillsChk\" />\n          <label class=\"rightA\" for=\"skills\">Life Skills\\Soft Skills</label>\n          \n          <input class=\"leftB\" id=\"tongue\" name=\"tongue\" type=\"checkbox\" [(ngModel)] = \"tongueChk\" />\n          <label class=\"rightB\" for=\"tongue\">Mother Tongue</label>\n          \n          <input class=\"leftB\" id=\"music\" name=\"music\" type=\"checkbox\" [(ngModel)] = \"musicChk\" />\n          <label class=\"rightB\" for=\"music\">Music</label>\n          \n          <input class=\"leftB\" id=\"outdoor\" name=\"outdoor\" type=\"checkbox\" [(ngModel)] = \"outdoorChk\" />\n          <label class=\"rightB\" for=\"outdoor\">Outdoor Education</label>\n          \n          \n          <input class=\"leftB\" id=\"sports\" name=\"sports\" type=\"checkbox\" [(ngModel)] = \"sportsChk\" />\n          <label class=\"rightB\" for=\"sports\">Sports</label>\n          \n          <input class=\"leftB\" id=\"visual\" name=\"visual\" type=\"checkbox\" [(ngModel)] = \"visualChk\" />\n          <label class=\"rightB\" for=\"visual\">Visual Arts</label>\n          \n          \n        \n        \n           </div>\n       \n          </div>\n       \n        </div>\n    \n        \n        <div fxLayout=\"row\"  *ngIf=\"trainersExist\">\n          \n          <div fxFlex=\"5\" fxHide fxShow.gt-xs></div>\n      \n \n  \n\n    <table fxFlex=\"1 1 auto\" > \n      <!-- <caption>Relevant Training Qualifications</caption> -->\n       <tbody style='font-size: 12px;'>\n    \n        <thead style='font-size: 12px;'>\n          <tr>\n            <th class=\"col1\">Name</th> \n            <th class=\"col2\">Email</th> \n            \n            <th class=\"col4\">Mobile Number</th>\n            <!-- <th class=\"col5\">Program</th> -->\n            \n           </tr> \n          </thead>\n       \n         \n  \n          <tr *ngFor=\"let trainer of trainers;\" (click)=\"onTrainerPick(trainer._id)\"\n                   [ngClass] = \"{'highlight' : trainer._id === trainerPickId}\">\n         \n    \n          <td class=\"col1\">{{trainer.name}}</td> \n          <td class=\"col2\">{{trainer.email}}</td> \n        \n          <!-- <td class=\"col3\">{{trainExp.trainName}}</td> -->\n          <td class=\"col4\">{{trainer.mobileNbr}}</td> \n        \n        </tr> \n       \n     \n     \n    </tbody>\n    \n      \n      </table>\n    \n    </div>\n\n\n    <div fxLayout=\"row\"  *ngIf=\"trainersExist\">\n          \n      <div fxFlex=\"5\" fxHide fxShow.gt-xs></div>\n\n      <p>Documents submitted</p>\n    \n    </div>\n\n\n    <div fxLayout=\"row\"  *ngIf=\"trainersExist\">\n\n      <div fxFlex=\"5\" fxHide fxShow.gt-xs></div>\n\n      <table fxFlex=\"1 1 auto\" > \n        <!-- <caption>Relevant Training Qualifications</caption> -->\n         <tbody style='font-size: 12px;'>\n      \n          <thead style='font-size: 12px;'>\n            <tr>\n              <th class=\"col1x\">Title</th> \n              <!-- <th class=\"col2\">Program</th>  -->\n              \n              <th class=\"col4x\">File</th>\n              <!-- <th class=\"col5\">Program</th> -->\n              \n             </tr> \n            </thead>\n         \n           \n      \n            <tr *ngFor=\"let doc of docs | programfilter: programs\" (click)=\"onDocPick(doc.folder,doc.file)\"\n                     [ngClass] = \"{'highlight' : doc.file === docFile}\" >\n           \n\n             <!-- <span *ngIf=\"programs.indexOf(doc.program) > -1 || doc.program == 'moe'\">  -->\n\n\n            <td class=\"col1x\">{{doc.title}}</td> \n            <!-- <td class=\"col2\">{{doc.program}}</td>  -->\n          \n            <!-- <td class=\"col3\">{{trainExp.trainName}}</td> -->\n            <td class=\"col4x\">{{doc.file}}</td> \n\n            <!-- </span>  -->\n          \n          </tr> \n         \n         \n       \n      </tbody>\n      \n        \n        </table>\n    \n      \n      </div>\n     \n    \n          \n    \n    \n    ","import { Component, OnInit } from '@angular/core';\r\nimport { Global } from '../lib/global' ;\r\n\r\n@Component({\r\n    selector: 'app-optimus-minds',\r\n    template:  `<div class=\"flex-container\">\r\n  <div fxLayout=\"row wrap\">\r\n    <div  fxFlex=\"100%\" fxFlex.gt-sm=\"50%\" >\r\n           <app-optimus-minds-admin></app-optimus-minds-admin> \r\n    </div>\r\n    <div  fxFlex=\"100%\" fxFlex.gt-sm=\"50%\">\r\n          <app-cv-salon-viewer></app-cv-salon-viewer> \r\n    </div> \r\n    </div> \r\n   \r\n  </div>`\r\n})\r\nexport class OptimusMinds implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Global } from '../lib/global';\nimport { RestSvc } from '../lib/restSvc';\n\n@Component({\n  selector: 'app-study-card',\n  templateUrl: './study-card.component.html',\n  styleUrls: ['./study-card.component.scss']\n})\nexport class StudyCardComponent implements OnInit {\n\n  // studyCards = [\n  //   {\"question\":\"What is MoSCoW\",\"header\": \"Is a Priortization Scheme\",\"answer\":\"Must Have - without cannot work <br> Should Have - Not there could be problem <br> Could Have - useful add value <br> Would have - not now\"},\n  //   {\"question\":\"What is MoSCoW\",\"header\": \"Is a Prioritation Scheme\",\"answer\":\"Must Have - without them system cannot work <br> eee\"},\n  //   {\"question\":\"c\",\"header\": \"Is a Prioritation Scheme\", \"answer\":\"cc\"}\n  // ] \n  studyCard = {\"question\":\"\",\"header\":\"\",\"answer\":\"\"}\n  \n  xanswer = false ;\n  idx = 0 ;\n  header = \"\" ;\n  question = \"\" ;\n  answer = \"\"  ;\n  constructor(private restSvc: RestSvc) { }\n\n  ngOnInit(): void {\n \n    Global.tableName = \"studyCards\"\n\n    this.restSvc.list().then(\n      (msg) => {\n\n        //  var result = Object.keys(msg).map((key => [key]));\n\n      \n\n\n        Global.studyCards =   Object.entries(msg);\n         \n\n       \n      \n       \n\n      \n      },\n      (err) => {\n\n        alert('Error: ' + JSON.stringify(err));\n\n      })\n\n\n    this.xanswer = false ;\n    \n  //  this.onNextCard() ;\n\n \n  }\n\n  onShowAnswer() {\n  \n    this.xanswer = !this.xanswer\n\n}\n  onNextCard() {\n\n    this.xanswer = false ;\n\n    var nbr = Math.floor(Math.random() * Global.studyCards.length); \n\n    if (nbr ==  this.idx) {\n       \n        if (nbr == 0) {\n          nbr = 1;\n        }\n        else {\n           nbr--  ;\n        }\n    }\n    \n    this.idx = nbr ;\n\n   \n  \n     this.studyCard = Global.studyCards[this.idx][1] ;\n\n\n     \n\n\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-around center\" >\n\n   \n    <mat-card class=\"matCardStudy\" style=\"text-align: center;\">\n\n        <mat-card-header>\n            <div  *ngIf=\"xanswer\" >\n            <h2>\n            {{studyCard.header}}\n            </h2>\n            <hr>\n        </div>\n        </mat-card-header>\n       \n     \n              \n        <mat-card-content>\n            \n            <div  *ngIf=\"!xanswer\">\n\n                <h1>\n                {{studyCard.question}}\n            </h1>\n             <hr>\n            </div>\n             <div  *ngIf=\"xanswer\" >\n                <h2>\n                    <div class=\"cssText\">\n                        <div [innerHTML]=\"studyCard.answer\"></div>\n                      </div>\n                  \n               \n            </h2>\n            </div>\n\n        </mat-card-content>\n        <mat-card-actions>\n         \n        </mat-card-actions>\n    </mat-card>\n\n    <button mat-raised-button color=\"primary\"  (click)=\"onShowAnswer()\">Show</button> \n    <button mat-raised-button color=\"primary\"  (click)=\"onNextCard()\">Next Card</button> \n   \n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}